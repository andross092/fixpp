// Generated by https://github.com/sashamakarenko/fixpp
// Copyright (c) 2021 sashamakarenko
// https://github.com/sashamakarenko/fixpp/blob/main/LICENSE
#pragma once
#ifndef fix44_MESSAGE_BUILDERS_H
#define fix44_MESSAGE_BUILDERS_H

#include <fix44/SenderApi.h>


namespace fix44
{

// start of MessageBuilders.hxx


// Group LegStipulations
class LegStipulationsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendLegStipulationType( const std::string_view & value ){ appendSafely<FieldLegStipulationType>( value ); }
     void appendLegStipulationValue( const std::string_view & value ){ appendSafely<FieldLegStipulationValue>( value ); }
};


// Group Events
class EventsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendEventType( const int & value ){ appendSafely<FieldEventType>( value ); }
     void appendEventDate( const std::string_view & value ){ appendSafely<FieldEventDate>( value ); }
     void appendEventPx( const Float & value ){ appendSafely<FieldEventPx>( value ); }
     void appendEventText( const std::string_view & value ){ appendSafely<FieldEventText>( value ); }
};


// Group LegSecurityAltID
class LegSecurityAltIDBuilder : protected ReusableMessageBuilder
{
   public:
     void appendLegSecurityAltID( const std::string_view & value ){ appendSafely<FieldLegSecurityAltID>( value ); }
     void appendLegSecurityAltIDSource( const std::string_view & value ){ appendSafely<FieldLegSecurityAltIDSource>( value ); }
};


// Group Capacities
class CapacitiesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendOrderCapacityQty( const Float & value ){ appendSafely<FieldOrderCapacityQty>( value ); }
};


// Group Nested3PartySubIDs
class Nested3PartySubIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendNested3PartySubID( const std::string_view & value ){ appendSafely<FieldNested3PartySubID>( value ); }
     void appendNested3PartySubIDType( const int & value ){ appendSafely<FieldNested3PartySubIDType>( value ); }
};


// Group PartySubIDs
class PartySubIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendPartySubID( const std::string_view & value ){ appendSafely<FieldPartySubID>( value ); }
     void appendPartySubIDType( const int & value ){ appendSafely<FieldPartySubIDType>( value ); }
};


// Group Nested2PartySubIDs
class Nested2PartySubIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendNested2PartySubID( const std::string_view & value ){ appendSafely<FieldNested2PartySubID>( value ); }
     void appendNested2PartySubIDType( const int & value ){ appendSafely<FieldNested2PartySubIDType>( value ); }
};


// Group Nested2PartyIDs
class Nested2PartyIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendNested2PartyID( const std::string_view & value ){ appendSafely<FieldNested2PartyID>( value ); }
     void appendNested2PartyIDSource( const char & value ){ appendSafely<FieldNested2PartyIDSource>( value ); }
     void appendNested2PartyRole( const int & value ){ appendSafely<FieldNested2PartyRole>( value ); }
     Nested2PartySubIDsBuilder & appendNoNested2PartySubIDs( unsigned count ) { appendSafely<FieldNoNested2PartySubIDs>( count ); return *reinterpret_cast<Nested2PartySubIDsBuilder*>( this ); }
};


// Group Hops
class HopsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendHopCompID( const std::string_view & value ){ appendSafely<FieldHopCompID>( value ); }
     void appendHopSendingTime( const std::string_view & value ){ appendSafely<FieldHopSendingTime>( value ); }
     void appendHopRefID( const unsigned & value ){ appendSafely<FieldHopRefID>( value ); }
};


// Group CollInquiryQualifier
class CollInquiryQualifierBuilder : protected ReusableMessageBuilder
{
   public:
     void appendCollInquiryQualifier( const int & value ){ appendSafely<FieldCollInquiryQualifier>( value ); }
};


// Group PartyIDs
class PartyIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendPartyID( const std::string_view & value ){ appendSafely<FieldPartyID>( value ); }
     void appendPartyIDSource( const char & value ){ appendSafely<FieldPartyIDSource>( value ); }
     void appendPartyRole( const int & value ){ appendSafely<FieldPartyRole>( value ); }
     PartySubIDsBuilder & appendNoPartySubIDs( unsigned count ) { appendSafely<FieldNoPartySubIDs>( count ); return *reinterpret_cast<PartySubIDsBuilder*>( this ); }
};


// Group Allocs
class AllocsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendAllocAccount( const std::string_view & value ){ appendSafely<FieldAllocAccount>( value ); }
     void appendAllocAcctIDSource( const int & value ){ appendSafely<FieldAllocAcctIDSource>( value ); }
     void appendAllocPrice( const Float & value ){ appendSafely<FieldAllocPrice>( value ); }
     void appendIndividualAllocID( const std::string_view & value ){ appendSafely<FieldIndividualAllocID>( value ); }
     void appendIndividualAllocRejCode( const int & value ){ appendSafely<FieldIndividualAllocRejCode>( value ); }
     void appendAllocText( const std::string_view & value ){ appendSafely<FieldAllocText>( value ); }
     void appendEncodedAllocTextLen( const unsigned & value ){ appendSafely<FieldEncodedAllocTextLen>( value ); }
     void appendEncodedAllocText( const std::string_view & value ){ appendSafely<FieldEncodedAllocText>( value ); }
};


// Group TradingSessions
class TradingSessionsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
};


// Group SecurityAltID
class SecurityAltIDBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSecurityAltID( const std::string_view & value ){ appendSafely<FieldSecurityAltID>( value ); }
     void appendSecurityAltIDSource( const std::string_view & value ){ appendSafely<FieldSecurityAltIDSource>( value ); }
};


// Group UnderlyingSecurityAltID
class UnderlyingSecurityAltIDBuilder : protected ReusableMessageBuilder
{
   public:
     void appendUnderlyingSecurityAltID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityAltID>( value ); }
     void appendUnderlyingSecurityAltIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityAltIDSource>( value ); }
};


// Group UnderlyingStips
class UnderlyingStipsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendUnderlyingStipType( const std::string_view & value ){ appendSafely<FieldUnderlyingStipType>( value ); }
     void appendUnderlyingStipValue( const std::string_view & value ){ appendSafely<FieldUnderlyingStipValue>( value ); }
};


// Group Underlyings
class UnderlyingsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendUnderlyingSettlPrice( const Float & value ){ appendSafely<FieldUnderlyingSettlPrice>( value ); }
     void appendUnderlyingSettlPriceType( const int & value ){ appendSafely<FieldUnderlyingSettlPriceType>( value ); }
};


// Group Stipulations
class StipulationsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendStipulationType( const std::string_view & value ){ appendSafely<FieldStipulationType>( value ); }
     void appendStipulationValue( const std::string_view & value ){ appendSafely<FieldStipulationValue>( value ); }
};


// Group Orders
class OrdersBuilder : protected ReusableMessageBuilder
{
   public:
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendListSeqNo( const int & value ){ appendSafely<FieldListSeqNo>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendSettlInstMode( const char & value ){ appendSafely<FieldSettlInstMode>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDayBookingInst( const char & value ){ appendSafely<FieldDayBookingInst>( value ); }
     void appendBookingUnit( const char & value ){ appendSafely<FieldBookingUnit>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendCashMargin( const char & value ){ appendSafely<FieldCashMargin>( value ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendPrevClosePx( const Float & value ){ appendSafely<FieldPrevClosePx>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendSideValueInd( const int & value ){ appendSafely<FieldSideValueInd>( value ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendSolicitedFlag( const bool & value ){ appendSafely<FieldSolicitedFlag>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendForexReq( const bool & value ){ appendSafely<FieldForexReq>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendPrice2( const Float & value ){ appendSafely<FieldPrice2>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendCoveredOrUncovered( const int & value ){ appendSafely<FieldCoveredOrUncovered>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
};


// Group SettlPartySubIDs
class SettlPartySubIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSettlPartySubID( const std::string_view & value ){ appendSafely<FieldSettlPartySubID>( value ); }
     void appendSettlPartySubIDType( const int & value ){ appendSafely<FieldSettlPartySubIDType>( value ); }
};


// Group SettlPartyIDs
class SettlPartyIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSettlPartyID( const std::string_view & value ){ appendSafely<FieldSettlPartyID>( value ); }
     void appendSettlPartyIDSource( const char & value ){ appendSafely<FieldSettlPartyIDSource>( value ); }
     void appendSettlPartyRole( const int & value ){ appendSafely<FieldSettlPartyRole>( value ); }
     SettlPartySubIDsBuilder & appendNoSettlPartySubIDs( unsigned count ) { appendSafely<FieldNoSettlPartySubIDs>( count ); return *reinterpret_cast<SettlPartySubIDsBuilder*>( this ); }
};


// Group DlvyInst
class DlvyInstBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSettlInstSource( const char & value ){ appendSafely<FieldSettlInstSource>( value ); }
     void appendDlvyInstType( const char & value ){ appendSafely<FieldDlvyInstType>( value ); }
     SettlPartyIDsBuilder & appendNoSettlPartyIDs( unsigned count ) { appendSafely<FieldNoSettlPartyIDs>( count ); return *reinterpret_cast<SettlPartyIDsBuilder*>( this ); }
};


// Group ClearingInstructions
class ClearingInstructionsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendClearingInstruction( const int & value ){ appendSafely<FieldClearingInstruction>( value ); }
};


// Group NestedPartySubIDs
class NestedPartySubIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendNestedPartySubID( const std::string_view & value ){ appendSafely<FieldNestedPartySubID>( value ); }
     void appendNestedPartySubIDType( const int & value ){ appendSafely<FieldNestedPartySubIDType>( value ); }
};


// Group NestedPartyIDs
class NestedPartyIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendNestedPartyID( const std::string_view & value ){ appendSafely<FieldNestedPartyID>( value ); }
     void appendNestedPartyIDSource( const char & value ){ appendSafely<FieldNestedPartyIDSource>( value ); }
     void appendNestedPartyRole( const int & value ){ appendSafely<FieldNestedPartyRole>( value ); }
     NestedPartySubIDsBuilder & appendNoNestedPartySubIDs( unsigned count ) { appendSafely<FieldNoNestedPartySubIDs>( count ); return *reinterpret_cast<NestedPartySubIDsBuilder*>( this ); }
};


// Group Legs
class LegsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendLegSymbol( const std::string_view & value ){ appendSafely<FieldLegSymbol>( value ); }
     void appendLegSymbolSfx( const std::string_view & value ){ appendSafely<FieldLegSymbolSfx>( value ); }
     void appendLegSecurityID( const std::string_view & value ){ appendSafely<FieldLegSecurityID>( value ); }
     void appendLegSecurityIDSource( const std::string_view & value ){ appendSafely<FieldLegSecurityIDSource>( value ); }
     LegSecurityAltIDBuilder & appendNoLegSecurityAltID( unsigned count ) { appendSafely<FieldNoLegSecurityAltID>( count ); return *reinterpret_cast<LegSecurityAltIDBuilder*>( this ); }
     void appendLegProduct( const int & value ){ appendSafely<FieldLegProduct>( value ); }
     void appendLegCFICode( const std::string_view & value ){ appendSafely<FieldLegCFICode>( value ); }
     void appendLegSecurityType( const std::string_view & value ){ appendSafely<FieldLegSecurityType>( value ); }
     void appendLegSecuritySubType( const std::string_view & value ){ appendSafely<FieldLegSecuritySubType>( value ); }
     void appendLegMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldLegMaturityMonthYear>( value ); }
     void appendLegMaturityDate( const std::string_view & value ){ appendSafely<FieldLegMaturityDate>( value ); }
     void appendLegCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldLegCouponPaymentDate>( value ); }
     void appendLegIssueDate( const std::string_view & value ){ appendSafely<FieldLegIssueDate>( value ); }
     void appendLegRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldLegRepoCollateralSecurityType>( value ); }
     void appendLegRepurchaseTerm( const int & value ){ appendSafely<FieldLegRepurchaseTerm>( value ); }
     void appendLegRepurchaseRate( const Float & value ){ appendSafely<FieldLegRepurchaseRate>( value ); }
     void appendLegFactor( const Float & value ){ appendSafely<FieldLegFactor>( value ); }
     void appendLegCreditRating( const std::string_view & value ){ appendSafely<FieldLegCreditRating>( value ); }
     void appendLegInstrRegistry( const std::string_view & value ){ appendSafely<FieldLegInstrRegistry>( value ); }
     void appendLegCountryOfIssue( const std::string_view & value ){ appendSafely<FieldLegCountryOfIssue>( value ); }
     void appendLegStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldLegStateOrProvinceOfIssue>( value ); }
     void appendLegLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLegLocaleOfIssue>( value ); }
     void appendLegRedemptionDate( const std::string_view & value ){ appendSafely<FieldLegRedemptionDate>( value ); }
     void appendLegStrikePrice( const Float & value ){ appendSafely<FieldLegStrikePrice>( value ); }
     void appendLegStrikeCurrency( const std::string_view & value ){ appendSafely<FieldLegStrikeCurrency>( value ); }
     void appendLegOptAttribute( const char & value ){ appendSafely<FieldLegOptAttribute>( value ); }
     void appendLegContractMultiplier( const Float & value ){ appendSafely<FieldLegContractMultiplier>( value ); }
     void appendLegCouponRate( const Float & value ){ appendSafely<FieldLegCouponRate>( value ); }
     void appendLegSecurityExchange( const std::string_view & value ){ appendSafely<FieldLegSecurityExchange>( value ); }
     void appendLegIssuer( const std::string_view & value ){ appendSafely<FieldLegIssuer>( value ); }
     void appendEncodedLegIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedLegIssuerLen>( value ); }
     void appendEncodedLegIssuer( const std::string_view & value ){ appendSafely<FieldEncodedLegIssuer>( value ); }
     void appendLegSecurityDesc( const std::string_view & value ){ appendSafely<FieldLegSecurityDesc>( value ); }
     void appendEncodedLegSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedLegSecurityDescLen>( value ); }
     void appendEncodedLegSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedLegSecurityDesc>( value ); }
     void appendLegRatioQty( const Float & value ){ appendSafely<FieldLegRatioQty>( value ); }
     void appendLegSide( const char & value ){ appendSafely<FieldLegSide>( value ); }
     void appendLegCurrency( const std::string_view & value ){ appendSafely<FieldLegCurrency>( value ); }
     void appendLegPool( const std::string_view & value ){ appendSafely<FieldLegPool>( value ); }
     void appendLegDatedDate( const std::string_view & value ){ appendSafely<FieldLegDatedDate>( value ); }
     void appendLegContractSettlMonth( const std::string_view & value ){ appendSafely<FieldLegContractSettlMonth>( value ); }
     void appendLegInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldLegInterestAccrualDate>( value ); }
     void appendLegQty( const Float & value ){ appendSafely<FieldLegQty>( value ); }
     void appendLegSwapType( const int & value ){ appendSafely<FieldLegSwapType>( value ); }
     LegStipulationsBuilder & appendNoLegStipulations( unsigned count ) { appendSafely<FieldNoLegStipulations>( count ); return *reinterpret_cast<LegStipulationsBuilder*>( this ); }
     void appendLegPositionEffect( const char & value ){ appendSafely<FieldLegPositionEffect>( value ); }
     void appendLegCoveredOrUncovered( const int & value ){ appendSafely<FieldLegCoveredOrUncovered>( value ); }
     NestedPartyIDsBuilder & appendNoNestedPartyIDs( unsigned count ) { appendSafely<FieldNoNestedPartyIDs>( count ); return *reinterpret_cast<NestedPartyIDsBuilder*>( this ); }
     void appendLegRefID( const std::string_view & value ){ appendSafely<FieldLegRefID>( value ); }
     void appendLegPrice( const Float & value ){ appendSafely<FieldLegPrice>( value ); }
     void appendLegSettlType( const char & value ){ appendSafely<FieldLegSettlType>( value ); }
     void appendLegSettlDate( const std::string_view & value ){ appendSafely<FieldLegSettlDate>( value ); }
     void appendLegLastPx( const Float & value ){ appendSafely<FieldLegLastPx>( value ); }
};


// Group QuoteEntries
class QuoteEntriesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
};


// Group QuoteSets
class QuoteSetsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendQuoteSetID( const std::string_view & value ){ appendSafely<FieldQuoteSetID>( value ); }
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendTotNoQuoteEntries( const int & value ){ appendSafely<FieldTotNoQuoteEntries>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     QuoteEntriesBuilder & appendNoQuoteEntries( unsigned count ) { appendSafely<FieldNoQuoteEntries>( count ); return *reinterpret_cast<QuoteEntriesBuilder*>( this ); }
};


// Group SecurityTypes
class SecurityTypesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
};


// Group Nested3PartyIDs
class Nested3PartyIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendNested3PartyID( const std::string_view & value ){ appendSafely<FieldNested3PartyID>( value ); }
     void appendNested3PartyIDSource( const char & value ){ appendSafely<FieldNested3PartyIDSource>( value ); }
     void appendNested3PartyRole( const int & value ){ appendSafely<FieldNested3PartyRole>( value ); }
     Nested3PartySubIDsBuilder & appendNoNested3PartySubIDs( unsigned count ) { appendSafely<FieldNoNested3PartySubIDs>( count ); return *reinterpret_cast<Nested3PartySubIDsBuilder*>( this ); }
};


// Group Positions
class PositionsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendPosType( const std::string_view & value ){ appendSafely<FieldPosType>( value ); }
     void appendLongQty( const Float & value ){ appendSafely<FieldLongQty>( value ); }
     void appendShortQty( const Float & value ){ appendSafely<FieldShortQty>( value ); }
     void appendPosQtyStatus( const int & value ){ appendSafely<FieldPosQtyStatus>( value ); }
     NestedPartyIDsBuilder & appendNoNestedPartyIDs( unsigned count ) { appendSafely<FieldNoNestedPartyIDs>( count ); return *reinterpret_cast<NestedPartyIDsBuilder*>( this ); }
};


// Group AffectedOrders
class AffectedOrdersBuilder : protected ReusableMessageBuilder
{
   public:
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendAffectedOrderID( const std::string_view & value ){ appendSafely<FieldAffectedOrderID>( value ); }
     void appendAffectedSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldAffectedSecondaryOrderID>( value ); }
};


// Group Execs
class ExecsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendLastQty( const Float & value ){ appendSafely<FieldLastQty>( value ); }
     void appendExecID( const std::string_view & value ){ appendSafely<FieldExecID>( value ); }
     void appendSecondaryExecID( const std::string_view & value ){ appendSafely<FieldSecondaryExecID>( value ); }
     void appendLastPx( const Float & value ){ appendSafely<FieldLastPx>( value ); }
     void appendLastParPx( const Float & value ){ appendSafely<FieldLastParPx>( value ); }
     void appendLastCapacity( const char & value ){ appendSafely<FieldLastCapacity>( value ); }
};


// Group MsgTypes
class MsgTypesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendRefMsgType( const std::string_view & value ){ appendSafely<FieldRefMsgType>( value ); }
     void appendMsgDirection( const char & value ){ appendSafely<FieldMsgDirection>( value ); }
};


// Group BidComponents
class BidComponentsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendNetGrossInd( const int & value ){ appendSafely<FieldNetGrossInd>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
};


// Group SettlInst
class SettlInstBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSettlInstID( const std::string_view & value ){ appendSafely<FieldSettlInstID>( value ); }
     void appendSettlInstTransType( const char & value ){ appendSafely<FieldSettlInstTransType>( value ); }
     void appendSettlInstRefID( const std::string_view & value ){ appendSafely<FieldSettlInstRefID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendLastUpdateTime( const std::string_view & value ){ appendSafely<FieldLastUpdateTime>( value ); }
     void appendSettlDeliveryType( const int & value ){ appendSafely<FieldSettlDeliveryType>( value ); }
     void appendStandInstDbType( const int & value ){ appendSafely<FieldStandInstDbType>( value ); }
     void appendStandInstDbName( const std::string_view & value ){ appendSafely<FieldStandInstDbName>( value ); }
     void appendStandInstDbID( const std::string_view & value ){ appendSafely<FieldStandInstDbID>( value ); }
     DlvyInstBuilder & appendNoDlvyInst( unsigned count ) { appendSafely<FieldNoDlvyInst>( count ); return *reinterpret_cast<DlvyInstBuilder*>( this ); }
     void appendPaymentMethod( const int & value ){ appendSafely<FieldPaymentMethod>( value ); }
     void appendPaymentRef( const std::string_view & value ){ appendSafely<FieldPaymentRef>( value ); }
     void appendCardHolderName( const std::string_view & value ){ appendSafely<FieldCardHolderName>( value ); }
     void appendCardNumber( const std::string_view & value ){ appendSafely<FieldCardNumber>( value ); }
     void appendCardStartDate( const std::string_view & value ){ appendSafely<FieldCardStartDate>( value ); }
     void appendCardExpDate( const std::string_view & value ){ appendSafely<FieldCardExpDate>( value ); }
     void appendCardIssNum( const std::string_view & value ){ appendSafely<FieldCardIssNum>( value ); }
     void appendPaymentDate( const std::string_view & value ){ appendSafely<FieldPaymentDate>( value ); }
     void appendPaymentRemitterID( const std::string_view & value ){ appendSafely<FieldPaymentRemitterID>( value ); }
};


// Group InstrAttrib
class InstrAttribBuilder : protected ReusableMessageBuilder
{
   public:
     void appendInstrAttribType( const int & value ){ appendSafely<FieldInstrAttribType>( value ); }
     void appendInstrAttribValue( const std::string_view & value ){ appendSafely<FieldInstrAttribValue>( value ); }
};


// Group MiscFees
class MiscFeesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendMiscFeeAmt( const Float & value ){ appendSafely<FieldMiscFeeAmt>( value ); }
     void appendMiscFeeCurr( const std::string_view & value ){ appendSafely<FieldMiscFeeCurr>( value ); }
     void appendMiscFeeType( const std::string_view & value ){ appendSafely<FieldMiscFeeType>( value ); }
     void appendMiscFeeBasis( const int & value ){ appendSafely<FieldMiscFeeBasis>( value ); }
};


// Group QuoteQualifiers
class QuoteQualifiersBuilder : protected ReusableMessageBuilder
{
   public:
     void appendQuoteQualifier( const char & value ){ appendSafely<FieldQuoteQualifier>( value ); }
};


// Group DistribInsts
class DistribInstsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendDistribPaymentMethod( const int & value ){ appendSafely<FieldDistribPaymentMethod>( value ); }
     void appendDistribPercentage( const Float & value ){ appendSafely<FieldDistribPercentage>( value ); }
     void appendCashDistribCurr( const std::string_view & value ){ appendSafely<FieldCashDistribCurr>( value ); }
     void appendCashDistribAgentName( const std::string_view & value ){ appendSafely<FieldCashDistribAgentName>( value ); }
     void appendCashDistribAgentCode( const std::string_view & value ){ appendSafely<FieldCashDistribAgentCode>( value ); }
     void appendCashDistribAgentAcctNumber( const std::string_view & value ){ appendSafely<FieldCashDistribAgentAcctNumber>( value ); }
     void appendCashDistribPayRef( const std::string_view & value ){ appendSafely<FieldCashDistribPayRef>( value ); }
     void appendCashDistribAgentAcctName( const std::string_view & value ){ appendSafely<FieldCashDistribAgentAcctName>( value ); }
};


// Group TrdRegTimestamps
class TrdRegTimestampsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendTrdRegTimestamp( const std::string_view & value ){ appendSafely<FieldTrdRegTimestamp>( value ); }
     void appendTrdRegTimestampType( const int & value ){ appendSafely<FieldTrdRegTimestampType>( value ); }
     void appendTrdRegTimestampOrigin( const std::string_view & value ){ appendSafely<FieldTrdRegTimestampOrigin>( value ); }
};


// Group AltMDSource
class AltMDSourceBuilder : protected ReusableMessageBuilder
{
   public:
     void appendAltMDSourceID( const std::string_view & value ){ appendSafely<FieldAltMDSourceID>( value ); }
};


// Group Sides
class SidesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendOrigOrdModTime( const std::string_view & value ){ appendSafely<FieldOrigOrdModTime>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Group RoutingIDs
class RoutingIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendRoutingType( const int & value ){ appendSafely<FieldRoutingType>( value ); }
     void appendRoutingID( const std::string_view & value ){ appendSafely<FieldRoutingID>( value ); }
};


// Group PosAmt
class PosAmtBuilder : protected ReusableMessageBuilder
{
   public:
     void appendPosAmtType( const std::string_view & value ){ appendSafely<FieldPosAmtType>( value ); }
     void appendPosAmt( const Float & value ){ appendSafely<FieldPosAmt>( value ); }
};


// Group LinesOfText
class LinesOfTextBuilder : protected ReusableMessageBuilder
{
   public:
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Group IOIQualifiers
class IOIQualifiersBuilder : protected ReusableMessageBuilder
{
   public:
     void appendIOIQualifier( const char & value ){ appendSafely<FieldIOIQualifier>( value ); }
};


// Group Dates
class DatesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
};


// Group MDEntryTypes
class MDEntryTypesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendMDEntryType( const char & value ){ appendSafely<FieldMDEntryType>( value ); }
};


// Group RelatedSym
class RelatedSymBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
};


// Group ContraBrokers
class ContraBrokersBuilder : protected ReusableMessageBuilder
{
   public:
     void appendContraBroker( const std::string_view & value ){ appendSafely<FieldContraBroker>( value ); }
     void appendContraTrader( const std::string_view & value ){ appendSafely<FieldContraTrader>( value ); }
     void appendContraTradeQty( const Float & value ){ appendSafely<FieldContraTradeQty>( value ); }
     void appendContraTradeTime( const std::string_view & value ){ appendSafely<FieldContraTradeTime>( value ); }
     void appendContraLegRefID( const std::string_view & value ){ appendSafely<FieldContraLegRefID>( value ); }
};


// Group Trades
class TradesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendTradeReportID( const std::string_view & value ){ appendSafely<FieldTradeReportID>( value ); }
     void appendSecondaryTradeReportID( const std::string_view & value ){ appendSafely<FieldSecondaryTradeReportID>( value ); }
};


// Group Strikes
class StrikesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
};


// Group BidDescriptors
class BidDescriptorsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendBidDescriptorType( const int & value ){ appendSafely<FieldBidDescriptorType>( value ); }
     void appendBidDescriptor( const std::string_view & value ){ appendSafely<FieldBidDescriptor>( value ); }
     void appendSideValueInd( const int & value ){ appendSafely<FieldSideValueInd>( value ); }
     void appendLiquidityValue( const Float & value ){ appendSafely<FieldLiquidityValue>( value ); }
     void appendLiquidityNumSecurities( const int & value ){ appendSafely<FieldLiquidityNumSecurities>( value ); }
     void appendLiquidityPctLow( const Float & value ){ appendSafely<FieldLiquidityPctLow>( value ); }
     void appendLiquidityPctHigh( const Float & value ){ appendSafely<FieldLiquidityPctHigh>( value ); }
     void appendEFPTrackingError( const Float & value ){ appendSafely<FieldEFPTrackingError>( value ); }
     void appendFairValue( const Float & value ){ appendSafely<FieldFairValue>( value ); }
     void appendOutsideIndexPct( const Float & value ){ appendSafely<FieldOutsideIndexPct>( value ); }
     void appendValueOfFutures( const Float & value ){ appendSafely<FieldValueOfFutures>( value ); }
};


// Group CompIDs
class CompIDsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendRefCompID( const std::string_view & value ){ appendSafely<FieldRefCompID>( value ); }
     void appendRefSubID( const std::string_view & value ){ appendSafely<FieldRefSubID>( value ); }
     void appendLocationID( const std::string_view & value ){ appendSafely<FieldLocationID>( value ); }
     void appendDeskID( const std::string_view & value ){ appendSafely<FieldDeskID>( value ); }
};


// Group LegAllocs
class LegAllocsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendLegAllocAccount( const std::string_view & value ){ appendSafely<FieldLegAllocAccount>( value ); }
     void appendLegIndividualAllocID( const std::string_view & value ){ appendSafely<FieldLegIndividualAllocID>( value ); }
     Nested2PartyIDsBuilder & appendNoNested2PartyIDs( unsigned count ) { appendSafely<FieldNoNested2PartyIDs>( count ); return *reinterpret_cast<Nested2PartyIDsBuilder*>( this ); }
     void appendLegAllocQty( const Float & value ){ appendSafely<FieldLegAllocQty>( value ); }
     void appendLegAllocAcctIDSource( const std::string_view & value ){ appendSafely<FieldLegAllocAcctIDSource>( value ); }
     void appendLegSettlCurrency( const std::string_view & value ){ appendSafely<FieldLegSettlCurrency>( value ); }
};


// Group RegistDtls
class RegistDtlsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendRegistDtls( const std::string_view & value ){ appendSafely<FieldRegistDtls>( value ); }
     void appendRegistEmail( const std::string_view & value ){ appendSafely<FieldRegistEmail>( value ); }
     void appendMailingDtls( const std::string_view & value ){ appendSafely<FieldMailingDtls>( value ); }
     void appendMailingInst( const std::string_view & value ){ appendSafely<FieldMailingInst>( value ); }
     NestedPartyIDsBuilder & appendNoNestedPartyIDs( unsigned count ) { appendSafely<FieldNoNestedPartyIDs>( count ); return *reinterpret_cast<NestedPartyIDsBuilder*>( this ); }
     void appendOwnerType( const int & value ){ appendSafely<FieldOwnerType>( value ); }
     void appendDateOfBirth( const std::string_view & value ){ appendSafely<FieldDateOfBirth>( value ); }
     void appendInvestorCountryOfResidence( const std::string_view & value ){ appendSafely<FieldInvestorCountryOfResidence>( value ); }
};


// Group ContAmts
class ContAmtsBuilder : protected ReusableMessageBuilder
{
   public:
     void appendContAmtType( const int & value ){ appendSafely<FieldContAmtType>( value ); }
     void appendContAmtValue( const Float & value ){ appendSafely<FieldContAmtValue>( value ); }
     void appendContAmtCurr( const std::string_view & value ){ appendSafely<FieldContAmtCurr>( value ); }
};


// Group MDEntries
class MDEntriesBuilder : protected ReusableMessageBuilder
{
   public:
     void appendMDEntryType( const char & value ){ appendSafely<FieldMDEntryType>( value ); }
     void appendMDEntryPx( const Float & value ){ appendSafely<FieldMDEntryPx>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendMDEntrySize( const Float & value ){ appendSafely<FieldMDEntrySize>( value ); }
     void appendMDEntryDate( const std::string_view & value ){ appendSafely<FieldMDEntryDate>( value ); }
     void appendMDEntryTime( const std::string_view & value ){ appendSafely<FieldMDEntryTime>( value ); }
     void appendTickDirection( const char & value ){ appendSafely<FieldTickDirection>( value ); }
     void appendMDMkt( const std::string_view & value ){ appendSafely<FieldMDMkt>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendQuoteCondition( const std::string_view & value ){ appendSafely<FieldQuoteCondition>( value ); }
     void appendTradeCondition( const std::string_view & value ){ appendSafely<FieldTradeCondition>( value ); }
     void appendMDEntryOriginator( const std::string_view & value ){ appendSafely<FieldMDEntryOriginator>( value ); }
     void appendLocationID( const std::string_view & value ){ appendSafely<FieldLocationID>( value ); }
     void appendDeskID( const std::string_view & value ){ appendSafely<FieldDeskID>( value ); }
     void appendOpenCloseSettlFlag( const std::string_view & value ){ appendSafely<FieldOpenCloseSettlFlag>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendSellerDays( const int & value ){ appendSafely<FieldSellerDays>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendQuoteEntryID( const std::string_view & value ){ appendSafely<FieldQuoteEntryID>( value ); }
     void appendMDEntryBuyer( const std::string_view & value ){ appendSafely<FieldMDEntryBuyer>( value ); }
     void appendMDEntrySeller( const std::string_view & value ){ appendSafely<FieldMDEntrySeller>( value ); }
     void appendNumberOfOrders( const int & value ){ appendSafely<FieldNumberOfOrders>( value ); }
     void appendMDEntryPositionNo( const int & value ){ appendSafely<FieldMDEntryPositionNo>( value ); }
     void appendScope( const std::string_view & value ){ appendSafely<FieldScope>( value ); }
     void appendPriceDelta( const Float & value ){ appendSafely<FieldPriceDelta>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message Header
class HeaderBuilder: public HeaderTemplate
{
   public:

     void appendBeginString( const std::string_view & value ){ append<FieldBeginString>( value ); }
     void appendBodyLength( const unsigned & value ){ append<FieldBodyLength>( value ); }
     void appendMsgType( const std::string_view & value ){ append<FieldMsgType>( value ); }
     void appendSenderCompID( const std::string_view & value ){ append<FieldSenderCompID>( value ); }
     void appendTargetCompID( const std::string_view & value ){ append<FieldTargetCompID>( value ); }
     void appendOnBehalfOfCompID( const std::string_view & value ){ append<FieldOnBehalfOfCompID>( value ); }
     void appendDeliverToCompID( const std::string_view & value ){ append<FieldDeliverToCompID>( value ); }
     void appendSecureDataLen( const unsigned & value ){ append<FieldSecureDataLen>( value ); }
     void appendSecureData( const std::string_view & value ){ append<FieldSecureData>( value ); }
     void appendMsgSeqNum( const unsigned & value ){ append<FieldMsgSeqNum>( value ); }
     void appendSenderSubID( const std::string_view & value ){ append<FieldSenderSubID>( value ); }
     void appendSenderLocationID( const std::string_view & value ){ append<FieldSenderLocationID>( value ); }
     void appendTargetSubID( const std::string_view & value ){ append<FieldTargetSubID>( value ); }
     void appendTargetLocationID( const std::string_view & value ){ append<FieldTargetLocationID>( value ); }
     void appendOnBehalfOfSubID( const std::string_view & value ){ append<FieldOnBehalfOfSubID>( value ); }
     void appendOnBehalfOfLocationID( const std::string_view & value ){ append<FieldOnBehalfOfLocationID>( value ); }
     void appendDeliverToSubID( const std::string_view & value ){ append<FieldDeliverToSubID>( value ); }
     void appendDeliverToLocationID( const std::string_view & value ){ append<FieldDeliverToLocationID>( value ); }
     void appendPossDupFlag( const bool & value ){ append<FieldPossDupFlag>( value ); }
     void appendPossResend( const bool & value ){ append<FieldPossResend>( value ); }
     void appendSendingTime( const std::string_view & value ){ append<FieldSendingTime>( value ); }
     void appendOrigSendingTime( const std::string_view & value ){ append<FieldOrigSendingTime>( value ); }
     void appendXmlDataLen( const unsigned & value ){ append<FieldXmlDataLen>( value ); }
     void appendXmlData( const std::string_view & value ){ append<FieldXmlData>( value ); }
     void appendMessageEncoding( const std::string_view & value ){ append<FieldMessageEncoding>( value ); }
     void appendLastMsgSeqNumProcessed( const unsigned & value ){ appendSafely<FieldLastMsgSeqNumProcessed>( value ); }
     HopsBuilder & appendNoHops( unsigned count ) { appendSafely<FieldNoHops>( count ); return *reinterpret_cast<HopsBuilder*>( this ); }
};


// Message Heartbeat
class HeartbeatBuilder: protected ReusableMessageBuilder
{
   public:

     static HeartbeatBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<HeartbeatBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTestReqID( const std::string_view & value ){ appendSafely<FieldTestReqID>( value ); }
};


// Message TestRequest
class TestRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static TestRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TestRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTestReqID( const std::string_view & value ){ appendSafely<FieldTestReqID>( value ); }
};


// Message ResendRequest
class ResendRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static ResendRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ResendRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendBeginSeqNo( const unsigned & value ){ appendSafely<FieldBeginSeqNo>( value ); }
     void appendEndSeqNo( const unsigned & value ){ appendSafely<FieldEndSeqNo>( value ); }
};


// Message Reject
class RejectBuilder: protected ReusableMessageBuilder
{
   public:

     static RejectBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<RejectBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendRefSeqNum( const unsigned & value ){ appendSafely<FieldRefSeqNum>( value ); }
     void appendRefTagID( const int & value ){ appendSafely<FieldRefTagID>( value ); }
     void appendRefMsgType( const std::string_view & value ){ appendSafely<FieldRefMsgType>( value ); }
     void appendSessionRejectReason( const int & value ){ appendSafely<FieldSessionRejectReason>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message SequenceReset
class SequenceResetBuilder: protected ReusableMessageBuilder
{
   public:

     static SequenceResetBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SequenceResetBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendGapFillFlag( const bool & value ){ appendSafely<FieldGapFillFlag>( value ); }
     void appendNewSeqNo( const unsigned & value ){ appendSafely<FieldNewSeqNo>( value ); }
};


// Message Logout
class LogoutBuilder: protected ReusableMessageBuilder
{
   public:

     static LogoutBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<LogoutBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message IOI
class IOIBuilder: protected ReusableMessageBuilder
{
   public:

     static IOIBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<IOIBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendIOITransType( const char & value ){ appendSafely<FieldIOITransType>( value ); }
     void appendIOIRefID( const std::string_view & value ){ appendSafely<FieldIOIRefID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendIOIQty( const std::string_view & value ){ appendSafely<FieldIOIQty>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendValidUntilTime( const std::string_view & value ){ appendSafely<FieldValidUntilTime>( value ); }
     void appendIOIQltyInd( const char & value ){ appendSafely<FieldIOIQltyInd>( value ); }
     void appendIOINaturalFlag( const bool & value ){ appendSafely<FieldIOINaturalFlag>( value ); }
     IOIQualifiersBuilder & appendNoIOIQualifiers( unsigned count ) { appendSafely<FieldNoIOIQualifiers>( count ); return *reinterpret_cast<IOIQualifiersBuilder*>( this ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendURLLink( const std::string_view & value ){ appendSafely<FieldURLLink>( value ); }
     RoutingIDsBuilder & appendNoRoutingIDs( unsigned count ) { appendSafely<FieldNoRoutingIDs>( count ); return *reinterpret_cast<RoutingIDsBuilder*>( this ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
};


// Message Advertisement
class AdvertisementBuilder: protected ReusableMessageBuilder
{
   public:

     static AdvertisementBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<AdvertisementBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendAdvId( const std::string_view & value ){ appendSafely<FieldAdvId>( value ); }
     void appendAdvTransType( const std::string_view & value ){ appendSafely<FieldAdvTransType>( value ); }
     void appendAdvRefID( const std::string_view & value ){ appendSafely<FieldAdvRefID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendAdvSide( const char & value ){ appendSafely<FieldAdvSide>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendURLLink( const std::string_view & value ){ appendSafely<FieldURLLink>( value ); }
     void appendLastMkt( const std::string_view & value ){ appendSafely<FieldLastMkt>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
};


// Message ExecutionReport
class ExecutionReportBuilder: protected ReusableMessageBuilder
{
   public:

     static ExecutionReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ExecutionReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendSecondaryExecID( const std::string_view & value ){ appendSafely<FieldSecondaryExecID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendQuoteRespID( const std::string_view & value ){ appendSafely<FieldQuoteRespID>( value ); }
     void appendOrdStatusReqID( const std::string_view & value ){ appendSafely<FieldOrdStatusReqID>( value ); }
     void appendMassStatusReqID( const std::string_view & value ){ appendSafely<FieldMassStatusReqID>( value ); }
     void appendTotNumReports( const int & value ){ appendSafely<FieldTotNumReports>( value ); }
     void appendLastRptRequested( const bool & value ){ appendSafely<FieldLastRptRequested>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     ContraBrokersBuilder & appendNoContraBrokers( unsigned count ) { appendSafely<FieldNoContraBrokers>( count ); return *reinterpret_cast<ContraBrokersBuilder*>( this ); }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendCrossID( const std::string_view & value ){ appendSafely<FieldCrossID>( value ); }
     void appendOrigCrossID( const std::string_view & value ){ appendSafely<FieldOrigCrossID>( value ); }
     void appendCrossType( const int & value ){ appendSafely<FieldCrossType>( value ); }
     void appendExecID( const std::string_view & value ){ appendSafely<FieldExecID>( value ); }
     void appendExecRefID( const std::string_view & value ){ appendSafely<FieldExecRefID>( value ); }
     void appendExecType( const char & value ){ appendSafely<FieldExecType>( value ); }
     void appendOrdStatus( const char & value ){ appendSafely<FieldOrdStatus>( value ); }
     void appendWorkingIndicator( const bool & value ){ appendSafely<FieldWorkingIndicator>( value ); }
     void appendOrdRejReason( const int & value ){ appendSafely<FieldOrdRejReason>( value ); }
     void appendExecRestatementReason( const int & value ){ appendSafely<FieldExecRestatementReason>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDayBookingInst( const char & value ){ appendSafely<FieldDayBookingInst>( value ); }
     void appendBookingUnit( const char & value ){ appendSafely<FieldBookingUnit>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendCashMargin( const char & value ){ appendSafely<FieldCashMargin>( value ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendPeggedPrice( const Float & value ){ appendSafely<FieldPeggedPrice>( value ); }
     void appendDiscretionPrice( const Float & value ){ appendSafely<FieldDiscretionPrice>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendTargetStrategyPerformance( const Float & value ){ appendSafely<FieldTargetStrategyPerformance>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendSolicitedFlag( const bool & value ){ appendSafely<FieldSolicitedFlag>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendLastQty( const Float & value ){ appendSafely<FieldLastQty>( value ); }
     void appendUnderlyingLastQty( const Float & value ){ appendSafely<FieldUnderlyingLastQty>( value ); }
     void appendLastPx( const Float & value ){ appendSafely<FieldLastPx>( value ); }
     void appendUnderlyingLastPx( const Float & value ){ appendSafely<FieldUnderlyingLastPx>( value ); }
     void appendLastParPx( const Float & value ){ appendSafely<FieldLastParPx>( value ); }
     void appendLastSpotRate( const Float & value ){ appendSafely<FieldLastSpotRate>( value ); }
     void appendLastForwardPoints( const Float & value ){ appendSafely<FieldLastForwardPoints>( value ); }
     void appendLastMkt( const std::string_view & value ){ appendSafely<FieldLastMkt>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendTimeBracket( const std::string_view & value ){ appendSafely<FieldTimeBracket>( value ); }
     void appendLastCapacity( const char & value ){ appendSafely<FieldLastCapacity>( value ); }
     void appendLeavesQty( const Float & value ){ appendSafely<FieldLeavesQty>( value ); }
     void appendCumQty( const Float & value ){ appendSafely<FieldCumQty>( value ); }
     void appendAvgPx( const Float & value ){ appendSafely<FieldAvgPx>( value ); }
     void appendDayOrderQty( const Float & value ){ appendSafely<FieldDayOrderQty>( value ); }
     void appendDayCumQty( const Float & value ){ appendSafely<FieldDayCumQty>( value ); }
     void appendDayAvgPx( const Float & value ){ appendSafely<FieldDayAvgPx>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendReportToExch( const bool & value ){ appendSafely<FieldReportToExch>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendGrossTradeAmt( const Float & value ){ appendSafely<FieldGrossTradeAmt>( value ); }
     void appendNumDaysInterest( const int & value ){ appendSafely<FieldNumDaysInterest>( value ); }
     void appendExDate( const std::string_view & value ){ appendSafely<FieldExDate>( value ); }
     void appendAccruedInterestRate( const Float & value ){ appendSafely<FieldAccruedInterestRate>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendInterestAtMaturity( const Float & value ){ appendSafely<FieldInterestAtMaturity>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendTradedFlatSwitch( const bool & value ){ appendSafely<FieldTradedFlatSwitch>( value ); }
     void appendBasisFeatureDate( const std::string_view & value ){ appendSafely<FieldBasisFeatureDate>( value ); }
     void appendBasisFeaturePrice( const Float & value ){ appendSafely<FieldBasisFeaturePrice>( value ); }
     void appendConcession( const Float & value ){ appendSafely<FieldConcession>( value ); }
     void appendTotalTakedown( const Float & value ){ appendSafely<FieldTotalTakedown>( value ); }
     void appendNetMoney( const Float & value ){ appendSafely<FieldNetMoney>( value ); }
     void appendSettlCurrAmt( const Float & value ){ appendSafely<FieldSettlCurrAmt>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendSettlCurrFxRate( const Float & value ){ appendSafely<FieldSettlCurrFxRate>( value ); }
     void appendSettlCurrFxRateCalc( const char & value ){ appendSafely<FieldSettlCurrFxRateCalc>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendLastForwardPoints2( const Float & value ){ appendSafely<FieldLastForwardPoints2>( value ); }
     void appendMultiLegReportingType( const char & value ){ appendSafely<FieldMultiLegReportingType>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
     void appendTransBkdTime( const std::string_view & value ){ appendSafely<FieldTransBkdTime>( value ); }
     void appendExecValuationPoint( const std::string_view & value ){ appendSafely<FieldExecValuationPoint>( value ); }
     void appendExecPriceType( const char & value ){ appendSafely<FieldExecPriceType>( value ); }
     void appendExecPriceAdjustment( const Float & value ){ appendSafely<FieldExecPriceAdjustment>( value ); }
     void appendPriorityIndicator( const int & value ){ appendSafely<FieldPriorityIndicator>( value ); }
     void appendPriceImprovement( const Float & value ){ appendSafely<FieldPriceImprovement>( value ); }
     void appendLastLiquidityInd( const int & value ){ appendSafely<FieldLastLiquidityInd>( value ); }
     ContAmtsBuilder & appendNoContAmts( unsigned count ) { appendSafely<FieldNoContAmts>( count ); return *reinterpret_cast<ContAmtsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendCopyMsgIndicator( const bool & value ){ appendSafely<FieldCopyMsgIndicator>( value ); }
     MiscFeesBuilder & appendNoMiscFees( unsigned count ) { appendSafely<FieldNoMiscFees>( count ); return *reinterpret_cast<MiscFeesBuilder*>( this ); }
};


// Message OrderCancelReject
class OrderCancelRejectBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderCancelRejectBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderCancelRejectBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendOrdStatus( const char & value ){ appendSafely<FieldOrdStatus>( value ); }
     void appendWorkingIndicator( const bool & value ){ appendSafely<FieldWorkingIndicator>( value ); }
     void appendOrigOrdModTime( const std::string_view & value ){ appendSafely<FieldOrigOrdModTime>( value ); }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendCxlRejResponseTo( const char & value ){ appendSafely<FieldCxlRejResponseTo>( value ); }
     void appendCxlRejReason( const int & value ){ appendSafely<FieldCxlRejReason>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message Logon
class LogonBuilder: protected ReusableMessageBuilder
{
   public:

     static LogonBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<LogonBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendEncryptMethod( const int & value ){ appendSafely<FieldEncryptMethod>( value ); }
     void appendHeartBtInt( const int & value ){ appendSafely<FieldHeartBtInt>( value ); }
     void appendRawDataLength( const unsigned & value ){ appendSafely<FieldRawDataLength>( value ); }
     void appendRawData( const std::string_view & value ){ appendSafely<FieldRawData>( value ); }
     void appendResetSeqNumFlag( const bool & value ){ appendSafely<FieldResetSeqNumFlag>( value ); }
     void appendNextExpectedMsgSeqNum( const unsigned & value ){ appendSafely<FieldNextExpectedMsgSeqNum>( value ); }
     void appendMaxMessageSize( const unsigned & value ){ appendSafely<FieldMaxMessageSize>( value ); }
     MsgTypesBuilder & appendNoMsgTypes( unsigned count ) { appendSafely<FieldNoMsgTypes>( count ); return *reinterpret_cast<MsgTypesBuilder*>( this ); }
     void appendTestMessageIndicator( const bool & value ){ appendSafely<FieldTestMessageIndicator>( value ); }
     void appendUsername( const std::string_view & value ){ appendSafely<FieldUsername>( value ); }
     void appendPassword( const std::string_view & value ){ appendSafely<FieldPassword>( value ); }
};


// Message News
class NewsBuilder: protected ReusableMessageBuilder
{
   public:

     static NewsBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NewsBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrigTime( const std::string_view & value ){ appendSafely<FieldOrigTime>( value ); }
     void appendUrgency( const char & value ){ appendSafely<FieldUrgency>( value ); }
     void appendHeadline( const std::string_view & value ){ appendSafely<FieldHeadline>( value ); }
     void appendEncodedHeadlineLen( const unsigned & value ){ appendSafely<FieldEncodedHeadlineLen>( value ); }
     void appendEncodedHeadline( const std::string_view & value ){ appendSafely<FieldEncodedHeadline>( value ); }
     RoutingIDsBuilder & appendNoRoutingIDs( unsigned count ) { appendSafely<FieldNoRoutingIDs>( count ); return *reinterpret_cast<RoutingIDsBuilder*>( this ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LinesOfTextBuilder & appendNoLinesOfText( unsigned count ) { appendSafely<FieldNoLinesOfText>( count ); return *reinterpret_cast<LinesOfTextBuilder*>( this ); }
     void appendURLLink( const std::string_view & value ){ appendSafely<FieldURLLink>( value ); }
     void appendRawDataLength( const unsigned & value ){ appendSafely<FieldRawDataLength>( value ); }
     void appendRawData( const std::string_view & value ){ appendSafely<FieldRawData>( value ); }
};


// Message Email
class EmailBuilder: protected ReusableMessageBuilder
{
   public:

     static EmailBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<EmailBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendEmailThreadID( const std::string_view & value ){ appendSafely<FieldEmailThreadID>( value ); }
     void appendEmailType( const char & value ){ appendSafely<FieldEmailType>( value ); }
     void appendOrigTime( const std::string_view & value ){ appendSafely<FieldOrigTime>( value ); }
     void appendSubject( const std::string_view & value ){ appendSafely<FieldSubject>( value ); }
     void appendEncodedSubjectLen( const unsigned & value ){ appendSafely<FieldEncodedSubjectLen>( value ); }
     void appendEncodedSubject( const std::string_view & value ){ appendSafely<FieldEncodedSubject>( value ); }
     RoutingIDsBuilder & appendNoRoutingIDs( unsigned count ) { appendSafely<FieldNoRoutingIDs>( count ); return *reinterpret_cast<RoutingIDsBuilder*>( this ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     LinesOfTextBuilder & appendNoLinesOfText( unsigned count ) { appendSafely<FieldNoLinesOfText>( count ); return *reinterpret_cast<LinesOfTextBuilder*>( this ); }
     void appendRawDataLength( const unsigned & value ){ appendSafely<FieldRawDataLength>( value ); }
     void appendRawData( const std::string_view & value ){ appendSafely<FieldRawData>( value ); }
};


// Message NewOrderSingle
class NewOrderSingleBuilder: protected ReusableMessageBuilder
{
   public:

     static NewOrderSingleBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NewOrderSingleBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDayBookingInst( const char & value ){ appendSafely<FieldDayBookingInst>( value ); }
     void appendBookingUnit( const char & value ){ appendSafely<FieldBookingUnit>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendCashMargin( const char & value ){ appendSafely<FieldCashMargin>( value ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendPrevClosePx( const Float & value ){ appendSafely<FieldPrevClosePx>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendSolicitedFlag( const bool & value ){ appendSafely<FieldSolicitedFlag>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendForexReq( const bool & value ){ appendSafely<FieldForexReq>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendPrice2( const Float & value ){ appendSafely<FieldPrice2>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendCoveredOrUncovered( const int & value ){ appendSafely<FieldCoveredOrUncovered>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
};


// Message NewOrderList
class NewOrderListBuilder: protected ReusableMessageBuilder
{
   public:

     static NewOrderListBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NewOrderListBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendBidID( const std::string_view & value ){ appendSafely<FieldBidID>( value ); }
     void appendClientBidID( const std::string_view & value ){ appendSafely<FieldClientBidID>( value ); }
     void appendProgRptReqs( const int & value ){ appendSafely<FieldProgRptReqs>( value ); }
     void appendBidType( const int & value ){ appendSafely<FieldBidType>( value ); }
     void appendProgPeriodInterval( const int & value ){ appendSafely<FieldProgPeriodInterval>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendListExecInstType( const char & value ){ appendSafely<FieldListExecInstType>( value ); }
     void appendListExecInst( const std::string_view & value ){ appendSafely<FieldListExecInst>( value ); }
     void appendEncodedListExecInstLen( const unsigned & value ){ appendSafely<FieldEncodedListExecInstLen>( value ); }
     void appendEncodedListExecInst( const std::string_view & value ){ appendSafely<FieldEncodedListExecInst>( value ); }
     void appendAllowableOneSidednessPct( const Float & value ){ appendSafely<FieldAllowableOneSidednessPct>( value ); }
     void appendAllowableOneSidednessValue( const Float & value ){ appendSafely<FieldAllowableOneSidednessValue>( value ); }
     void appendAllowableOneSidednessCurr( const std::string_view & value ){ appendSafely<FieldAllowableOneSidednessCurr>( value ); }
     void appendTotNoOrders( const int & value ){ appendSafely<FieldTotNoOrders>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     OrdersBuilder & appendNoOrders( unsigned count ) { appendSafely<FieldNoOrders>( count ); return *reinterpret_cast<OrdersBuilder*>( this ); }
};


// Message OrderCancelRequest
class OrderCancelRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderCancelRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderCancelRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendOrigOrdModTime( const std::string_view & value ){ appendSafely<FieldOrigOrdModTime>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message OrderCancelReplaceRequest
class OrderCancelReplaceRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderCancelReplaceRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderCancelReplaceRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendOrigOrdModTime( const std::string_view & value ){ appendSafely<FieldOrigOrdModTime>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDayBookingInst( const char & value ){ appendSafely<FieldDayBookingInst>( value ); }
     void appendBookingUnit( const char & value ){ appendSafely<FieldBookingUnit>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendCashMargin( const char & value ){ appendSafely<FieldCashMargin>( value ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendSolicitedFlag( const bool & value ){ appendSafely<FieldSolicitedFlag>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendForexReq( const bool & value ){ appendSafely<FieldForexReq>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendPrice2( const Float & value ){ appendSafely<FieldPrice2>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendCoveredOrUncovered( const int & value ){ appendSafely<FieldCoveredOrUncovered>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
};


// Message OrderStatusRequest
class OrderStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendOrdStatusReqID( const std::string_view & value ){ appendSafely<FieldOrdStatusReqID>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
};


// Message AllocationInstruction
class AllocationInstructionBuilder: protected ReusableMessageBuilder
{
   public:

     static AllocationInstructionBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<AllocationInstructionBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     void appendAllocTransType( const char & value ){ appendSafely<FieldAllocTransType>( value ); }
     void appendAllocType( const int & value ){ appendSafely<FieldAllocType>( value ); }
     void appendSecondaryAllocID( const std::string_view & value ){ appendSafely<FieldSecondaryAllocID>( value ); }
     void appendRefAllocID( const std::string_view & value ){ appendSafely<FieldRefAllocID>( value ); }
     void appendAllocCancReplaceReason( const int & value ){ appendSafely<FieldAllocCancReplaceReason>( value ); }
     void appendAllocIntermedReqType( const int & value ){ appendSafely<FieldAllocIntermedReqType>( value ); }
     void appendAllocLinkID( const std::string_view & value ){ appendSafely<FieldAllocLinkID>( value ); }
     void appendAllocLinkType( const int & value ){ appendSafely<FieldAllocLinkType>( value ); }
     void appendBookingRefID( const std::string_view & value ){ appendSafely<FieldBookingRefID>( value ); }
     void appendAllocNoOrdersType( const int & value ){ appendSafely<FieldAllocNoOrdersType>( value ); }
     OrdersBuilder & appendNoOrders( unsigned count ) { appendSafely<FieldNoOrders>( count ); return *reinterpret_cast<OrdersBuilder*>( this ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     void appendPreviouslyReported( const bool & value ){ appendSafely<FieldPreviouslyReported>( value ); }
     void appendReversalIndicator( const bool & value ){ appendSafely<FieldReversalIndicator>( value ); }
     void appendMatchType( const std::string_view & value ){ appendSafely<FieldMatchType>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendLastMkt( const std::string_view & value ){ appendSafely<FieldLastMkt>( value ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAvgPx( const Float & value ){ appendSafely<FieldAvgPx>( value ); }
     void appendAvgParPx( const Float & value ){ appendSafely<FieldAvgParPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendAvgPxPrecision( const int & value ){ appendSafely<FieldAvgPxPrecision>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendGrossTradeAmt( const Float & value ){ appendSafely<FieldGrossTradeAmt>( value ); }
     void appendConcession( const Float & value ){ appendSafely<FieldConcession>( value ); }
     void appendTotalTakedown( const Float & value ){ appendSafely<FieldTotalTakedown>( value ); }
     void appendNetMoney( const Float & value ){ appendSafely<FieldNetMoney>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendAutoAcceptIndicator( const bool & value ){ appendSafely<FieldAutoAcceptIndicator>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendNumDaysInterest( const int & value ){ appendSafely<FieldNumDaysInterest>( value ); }
     void appendAccruedInterestRate( const Float & value ){ appendSafely<FieldAccruedInterestRate>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendTotalAccruedInterestAmt( const Float & value ){ appendSafely<FieldTotalAccruedInterestAmt>( value ); }
     void appendInterestAtMaturity( const Float & value ){ appendSafely<FieldInterestAtMaturity>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendLegalConfirm( const bool & value ){ appendSafely<FieldLegalConfirm>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendTotNoAllocs( const int & value ){ appendSafely<FieldTotNoAllocs>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
};


// Message ListCancelRequest
class ListCancelRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static ListCancelRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ListCancelRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message ListExecute
class ListExecuteBuilder: protected ReusableMessageBuilder
{
   public:

     static ListExecuteBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ListExecuteBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendClientBidID( const std::string_view & value ){ appendSafely<FieldClientBidID>( value ); }
     void appendBidID( const std::string_view & value ){ appendSafely<FieldBidID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message ListStatusRequest
class ListStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static ListStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ListStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message ListStatus
class ListStatusBuilder: protected ReusableMessageBuilder
{
   public:

     static ListStatusBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ListStatusBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendListStatusType( const int & value ){ appendSafely<FieldListStatusType>( value ); }
     void appendNoRpts( const int & value ){ appendSafely<FieldNoRpts>( value ); }
     void appendListOrderStatus( const int & value ){ appendSafely<FieldListOrderStatus>( value ); }
     void appendRptSeq( const int & value ){ appendSafely<FieldRptSeq>( value ); }
     void appendListStatusText( const std::string_view & value ){ appendSafely<FieldListStatusText>( value ); }
     void appendEncodedListStatusTextLen( const unsigned & value ){ appendSafely<FieldEncodedListStatusTextLen>( value ); }
     void appendEncodedListStatusText( const std::string_view & value ){ appendSafely<FieldEncodedListStatusText>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendTotNoOrders( const int & value ){ appendSafely<FieldTotNoOrders>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     OrdersBuilder & appendNoOrders( unsigned count ) { appendSafely<FieldNoOrders>( count ); return *reinterpret_cast<OrdersBuilder*>( this ); }
};


// Message AllocationInstructionAck
class AllocationInstructionAckBuilder: protected ReusableMessageBuilder
{
   public:

     static AllocationInstructionAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<AllocationInstructionAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendSecondaryAllocID( const std::string_view & value ){ appendSafely<FieldSecondaryAllocID>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendAllocStatus( const int & value ){ appendSafely<FieldAllocStatus>( value ); }
     void appendAllocRejCode( const int & value ){ appendSafely<FieldAllocRejCode>( value ); }
     void appendAllocType( const int & value ){ appendSafely<FieldAllocType>( value ); }
     void appendAllocIntermedReqType( const int & value ){ appendSafely<FieldAllocIntermedReqType>( value ); }
     void appendMatchStatus( const char & value ){ appendSafely<FieldMatchStatus>( value ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
};


// Message DontKnowTrade
class DontKnowTradeBuilder: protected ReusableMessageBuilder
{
   public:

     static DontKnowTradeBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<DontKnowTradeBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendExecID( const std::string_view & value ){ appendSafely<FieldExecID>( value ); }
     void appendDKReason( const char & value ){ appendSafely<FieldDKReason>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendLastQty( const Float & value ){ appendSafely<FieldLastQty>( value ); }
     void appendLastPx( const Float & value ){ appendSafely<FieldLastPx>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message QuoteRequest
class QuoteRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendRFQReqID( const std::string_view & value ){ appendSafely<FieldRFQReqID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message Quote
class QuoteBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendQuoteRespID( const std::string_view & value ){ appendSafely<FieldQuoteRespID>( value ); }
     void appendQuoteType( const int & value ){ appendSafely<FieldQuoteType>( value ); }
     QuoteQualifiersBuilder & appendNoQuoteQualifiers( unsigned count ) { appendSafely<FieldNoQuoteQualifiers>( count ); return *reinterpret_cast<QuoteQualifiersBuilder*>( this ); }
     void appendQuoteResponseLevel( const int & value ){ appendSafely<FieldQuoteResponseLevel>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendBidPx( const Float & value ){ appendSafely<FieldBidPx>( value ); }
     void appendOfferPx( const Float & value ){ appendSafely<FieldOfferPx>( value ); }
     void appendMktBidPx( const Float & value ){ appendSafely<FieldMktBidPx>( value ); }
     void appendMktOfferPx( const Float & value ){ appendSafely<FieldMktOfferPx>( value ); }
     void appendMinBidSize( const Float & value ){ appendSafely<FieldMinBidSize>( value ); }
     void appendBidSize( const Float & value ){ appendSafely<FieldBidSize>( value ); }
     void appendMinOfferSize( const Float & value ){ appendSafely<FieldMinOfferSize>( value ); }
     void appendOfferSize( const Float & value ){ appendSafely<FieldOfferSize>( value ); }
     void appendValidUntilTime( const std::string_view & value ){ appendSafely<FieldValidUntilTime>( value ); }
     void appendBidSpotRate( const Float & value ){ appendSafely<FieldBidSpotRate>( value ); }
     void appendOfferSpotRate( const Float & value ){ appendSafely<FieldOfferSpotRate>( value ); }
     void appendBidForwardPoints( const Float & value ){ appendSafely<FieldBidForwardPoints>( value ); }
     void appendOfferForwardPoints( const Float & value ){ appendSafely<FieldOfferForwardPoints>( value ); }
     void appendMidPx( const Float & value ){ appendSafely<FieldMidPx>( value ); }
     void appendBidYield( const Float & value ){ appendSafely<FieldBidYield>( value ); }
     void appendMidYield( const Float & value ){ appendSafely<FieldMidYield>( value ); }
     void appendOfferYield( const Float & value ){ appendSafely<FieldOfferYield>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendBidForwardPoints2( const Float & value ){ appendSafely<FieldBidForwardPoints2>( value ); }
     void appendOfferForwardPoints2( const Float & value ){ appendSafely<FieldOfferForwardPoints2>( value ); }
     void appendSettlCurrBidFxRate( const Float & value ){ appendSafely<FieldSettlCurrBidFxRate>( value ); }
     void appendSettlCurrOfferFxRate( const Float & value ){ appendSafely<FieldSettlCurrOfferFxRate>( value ); }
     void appendSettlCurrFxRateCalc( const char & value ){ appendSafely<FieldSettlCurrFxRateCalc>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message SettlementInstructions
class SettlementInstructionsBuilder: protected ReusableMessageBuilder
{
   public:

     static SettlementInstructionsBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SettlementInstructionsBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSettlInstMsgID( const std::string_view & value ){ appendSafely<FieldSettlInstMsgID>( value ); }
     void appendSettlInstReqID( const std::string_view & value ){ appendSafely<FieldSettlInstReqID>( value ); }
     void appendSettlInstMode( const char & value ){ appendSafely<FieldSettlInstMode>( value ); }
     void appendSettlInstReqRejCode( const int & value ){ appendSafely<FieldSettlInstReqRejCode>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     SettlInstBuilder & appendNoSettlInst( unsigned count ) { appendSafely<FieldNoSettlInst>( count ); return *reinterpret_cast<SettlInstBuilder*>( this ); }
};


// Message MarketDataRequest
class MarketDataRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static MarketDataRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MarketDataRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendMDReqID( const std::string_view & value ){ appendSafely<FieldMDReqID>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendMarketDepth( const int & value ){ appendSafely<FieldMarketDepth>( value ); }
     void appendMDUpdateType( const int & value ){ appendSafely<FieldMDUpdateType>( value ); }
     void appendAggregatedBook( const bool & value ){ appendSafely<FieldAggregatedBook>( value ); }
     void appendOpenCloseSettlFlag( const std::string_view & value ){ appendSafely<FieldOpenCloseSettlFlag>( value ); }
     void appendScope( const std::string_view & value ){ appendSafely<FieldScope>( value ); }
     void appendMDImplicitDelete( const bool & value ){ appendSafely<FieldMDImplicitDelete>( value ); }
     MDEntryTypesBuilder & appendNoMDEntryTypes( unsigned count ) { appendSafely<FieldNoMDEntryTypes>( count ); return *reinterpret_cast<MDEntryTypesBuilder*>( this ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendApplQueueAction( const int & value ){ appendSafely<FieldApplQueueAction>( value ); }
     void appendApplQueueMax( const int & value ){ appendSafely<FieldApplQueueMax>( value ); }
};


// Message MarketDataSnapshotFullRefresh
class MarketDataSnapshotFullRefreshBuilder: protected ReusableMessageBuilder
{
   public:

     static MarketDataSnapshotFullRefreshBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MarketDataSnapshotFullRefreshBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendMDReqID( const std::string_view & value ){ appendSafely<FieldMDReqID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendFinancialStatus( const std::string_view & value ){ appendSafely<FieldFinancialStatus>( value ); }
     void appendCorporateAction( const std::string_view & value ){ appendSafely<FieldCorporateAction>( value ); }
     void appendNetChgPrevDay( const Float & value ){ appendSafely<FieldNetChgPrevDay>( value ); }
     MDEntriesBuilder & appendNoMDEntries( unsigned count ) { appendSafely<FieldNoMDEntries>( count ); return *reinterpret_cast<MDEntriesBuilder*>( this ); }
     void appendApplQueueDepth( const int & value ){ appendSafely<FieldApplQueueDepth>( value ); }
     void appendApplQueueResolution( const int & value ){ appendSafely<FieldApplQueueResolution>( value ); }
};


// Message MarketDataIncrementalRefresh
class MarketDataIncrementalRefreshBuilder: protected ReusableMessageBuilder
{
   public:

     static MarketDataIncrementalRefreshBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MarketDataIncrementalRefreshBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendMDReqID( const std::string_view & value ){ appendSafely<FieldMDReqID>( value ); }
     MDEntriesBuilder & appendNoMDEntries( unsigned count ) { appendSafely<FieldNoMDEntries>( count ); return *reinterpret_cast<MDEntriesBuilder*>( this ); }
     void appendApplQueueDepth( const int & value ){ appendSafely<FieldApplQueueDepth>( value ); }
     void appendApplQueueResolution( const int & value ){ appendSafely<FieldApplQueueResolution>( value ); }
};


// Message MarketDataRequestReject
class MarketDataRequestRejectBuilder: protected ReusableMessageBuilder
{
   public:

     static MarketDataRequestRejectBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MarketDataRequestRejectBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendMDReqID( const std::string_view & value ){ appendSafely<FieldMDReqID>( value ); }
     void appendMDReqRejReason( const char & value ){ appendSafely<FieldMDReqRejReason>( value ); }
     AltMDSourceBuilder & appendNoAltMDSource( unsigned count ) { appendSafely<FieldNoAltMDSource>( count ); return *reinterpret_cast<AltMDSourceBuilder*>( this ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message QuoteCancel
class QuoteCancelBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteCancelBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteCancelBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendQuoteCancelType( const int & value ){ appendSafely<FieldQuoteCancelType>( value ); }
     void appendQuoteResponseLevel( const int & value ){ appendSafely<FieldQuoteResponseLevel>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     QuoteEntriesBuilder & appendNoQuoteEntries( unsigned count ) { appendSafely<FieldNoQuoteEntries>( count ); return *reinterpret_cast<QuoteEntriesBuilder*>( this ); }
};


// Message QuoteStatusRequest
class QuoteStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteStatusReqID( const std::string_view & value ){ appendSafely<FieldQuoteStatusReqID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message MassQuoteAcknowledgement
class MassQuoteAcknowledgementBuilder: protected ReusableMessageBuilder
{
   public:

     static MassQuoteAcknowledgementBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MassQuoteAcknowledgementBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendQuoteStatus( const int & value ){ appendSafely<FieldQuoteStatus>( value ); }
     void appendQuoteRejectReason( const int & value ){ appendSafely<FieldQuoteRejectReason>( value ); }
     void appendQuoteResponseLevel( const int & value ){ appendSafely<FieldQuoteResponseLevel>( value ); }
     void appendQuoteType( const int & value ){ appendSafely<FieldQuoteType>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     QuoteSetsBuilder & appendNoQuoteSets( unsigned count ) { appendSafely<FieldNoQuoteSets>( count ); return *reinterpret_cast<QuoteSetsBuilder*>( this ); }
};


// Message SecurityDefinitionRequest
class SecurityDefinitionRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityDefinitionRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityDefinitionRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityRequestType( const int & value ){ appendSafely<FieldSecurityRequestType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendExpirationCycle( const int & value ){ appendSafely<FieldExpirationCycle>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message SecurityDefinition
class SecurityDefinitionBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityDefinitionBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityDefinitionBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityResponseID( const std::string_view & value ){ appendSafely<FieldSecurityResponseID>( value ); }
     void appendSecurityResponseType( const int & value ){ appendSafely<FieldSecurityResponseType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendExpirationCycle( const int & value ){ appendSafely<FieldExpirationCycle>( value ); }
     void appendRoundLot( const Float & value ){ appendSafely<FieldRoundLot>( value ); }
     void appendMinTradeVol( const Float & value ){ appendSafely<FieldMinTradeVol>( value ); }
};


// Message SecurityStatusRequest
class SecurityStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityStatusReqID( const std::string_view & value ){ appendSafely<FieldSecurityStatusReqID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
};


// Message SecurityStatus
class SecurityStatusBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityStatusBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityStatusBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityStatusReqID( const std::string_view & value ){ appendSafely<FieldSecurityStatusReqID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendUnsolicitedIndicator( const bool & value ){ appendSafely<FieldUnsolicitedIndicator>( value ); }
     void appendSecurityTradingStatus( const int & value ){ appendSafely<FieldSecurityTradingStatus>( value ); }
     void appendFinancialStatus( const std::string_view & value ){ appendSafely<FieldFinancialStatus>( value ); }
     void appendCorporateAction( const std::string_view & value ){ appendSafely<FieldCorporateAction>( value ); }
     void appendHaltReasonChar( const char & value ){ appendSafely<FieldHaltReasonChar>( value ); }
     void appendInViewOfCommon( const bool & value ){ appendSafely<FieldInViewOfCommon>( value ); }
     void appendDueToRelated( const bool & value ){ appendSafely<FieldDueToRelated>( value ); }
     void appendBuyVolume( const Float & value ){ appendSafely<FieldBuyVolume>( value ); }
     void appendSellVolume( const Float & value ){ appendSafely<FieldSellVolume>( value ); }
     void appendHighPx( const Float & value ){ appendSafely<FieldHighPx>( value ); }
     void appendLowPx( const Float & value ){ appendSafely<FieldLowPx>( value ); }
     void appendLastPx( const Float & value ){ appendSafely<FieldLastPx>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendAdjustment( const int & value ){ appendSafely<FieldAdjustment>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message TradingSessionStatusRequest
class TradingSessionStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static TradingSessionStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TradingSessionStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTradSesReqID( const std::string_view & value ){ appendSafely<FieldTradSesReqID>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendTradSesMethod( const int & value ){ appendSafely<FieldTradSesMethod>( value ); }
     void appendTradSesMode( const int & value ){ appendSafely<FieldTradSesMode>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message TradingSessionStatus
class TradingSessionStatusBuilder: protected ReusableMessageBuilder
{
   public:

     static TradingSessionStatusBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TradingSessionStatusBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTradSesReqID( const std::string_view & value ){ appendSafely<FieldTradSesReqID>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendTradSesMethod( const int & value ){ appendSafely<FieldTradSesMethod>( value ); }
     void appendTradSesMode( const int & value ){ appendSafely<FieldTradSesMode>( value ); }
     void appendUnsolicitedIndicator( const bool & value ){ appendSafely<FieldUnsolicitedIndicator>( value ); }
     void appendTradSesStatus( const int & value ){ appendSafely<FieldTradSesStatus>( value ); }
     void appendTradSesStatusRejReason( const int & value ){ appendSafely<FieldTradSesStatusRejReason>( value ); }
     void appendTradSesStartTime( const std::string_view & value ){ appendSafely<FieldTradSesStartTime>( value ); }
     void appendTradSesOpenTime( const std::string_view & value ){ appendSafely<FieldTradSesOpenTime>( value ); }
     void appendTradSesPreCloseTime( const std::string_view & value ){ appendSafely<FieldTradSesPreCloseTime>( value ); }
     void appendTradSesCloseTime( const std::string_view & value ){ appendSafely<FieldTradSesCloseTime>( value ); }
     void appendTradSesEndTime( const std::string_view & value ){ appendSafely<FieldTradSesEndTime>( value ); }
     void appendTotalVolumeTraded( const Float & value ){ appendSafely<FieldTotalVolumeTraded>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message MassQuote
class MassQuoteBuilder: protected ReusableMessageBuilder
{
   public:

     static MassQuoteBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MassQuoteBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendQuoteType( const int & value ){ appendSafely<FieldQuoteType>( value ); }
     void appendQuoteResponseLevel( const int & value ){ appendSafely<FieldQuoteResponseLevel>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDefBidSize( const Float & value ){ appendSafely<FieldDefBidSize>( value ); }
     void appendDefOfferSize( const Float & value ){ appendSafely<FieldDefOfferSize>( value ); }
     QuoteSetsBuilder & appendNoQuoteSets( unsigned count ) { appendSafely<FieldNoQuoteSets>( count ); return *reinterpret_cast<QuoteSetsBuilder*>( this ); }
};


// Message BusinessMessageReject
class BusinessMessageRejectBuilder: protected ReusableMessageBuilder
{
   public:

     static BusinessMessageRejectBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<BusinessMessageRejectBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendRefSeqNum( const unsigned & value ){ appendSafely<FieldRefSeqNum>( value ); }
     void appendRefMsgType( const std::string_view & value ){ appendSafely<FieldRefMsgType>( value ); }
     void appendBusinessRejectRefID( const std::string_view & value ){ appendSafely<FieldBusinessRejectRefID>( value ); }
     void appendBusinessRejectReason( const int & value ){ appendSafely<FieldBusinessRejectReason>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message BidRequest
class BidRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static BidRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<BidRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendBidID( const std::string_view & value ){ appendSafely<FieldBidID>( value ); }
     void appendClientBidID( const std::string_view & value ){ appendSafely<FieldClientBidID>( value ); }
     void appendBidRequestTransType( const char & value ){ appendSafely<FieldBidRequestTransType>( value ); }
     void appendListName( const std::string_view & value ){ appendSafely<FieldListName>( value ); }
     void appendTotNoRelatedSym( const int & value ){ appendSafely<FieldTotNoRelatedSym>( value ); }
     void appendBidType( const int & value ){ appendSafely<FieldBidType>( value ); }
     void appendNumTickets( const int & value ){ appendSafely<FieldNumTickets>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendSideValue1( const Float & value ){ appendSafely<FieldSideValue1>( value ); }
     void appendSideValue2( const Float & value ){ appendSafely<FieldSideValue2>( value ); }
     BidDescriptorsBuilder & appendNoBidDescriptors( unsigned count ) { appendSafely<FieldNoBidDescriptors>( count ); return *reinterpret_cast<BidDescriptorsBuilder*>( this ); }
     BidComponentsBuilder & appendNoBidComponents( unsigned count ) { appendSafely<FieldNoBidComponents>( count ); return *reinterpret_cast<BidComponentsBuilder*>( this ); }
     void appendLiquidityIndType( const int & value ){ appendSafely<FieldLiquidityIndType>( value ); }
     void appendWtAverageLiquidity( const Float & value ){ appendSafely<FieldWtAverageLiquidity>( value ); }
     void appendExchangeForPhysical( const bool & value ){ appendSafely<FieldExchangeForPhysical>( value ); }
     void appendOutMainCntryUIndex( const Float & value ){ appendSafely<FieldOutMainCntryUIndex>( value ); }
     void appendCrossPercent( const Float & value ){ appendSafely<FieldCrossPercent>( value ); }
     void appendProgRptReqs( const int & value ){ appendSafely<FieldProgRptReqs>( value ); }
     void appendProgPeriodInterval( const int & value ){ appendSafely<FieldProgPeriodInterval>( value ); }
     void appendIncTaxInd( const int & value ){ appendSafely<FieldIncTaxInd>( value ); }
     void appendForexReq( const bool & value ){ appendSafely<FieldForexReq>( value ); }
     void appendNumBidders( const int & value ){ appendSafely<FieldNumBidders>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendBidTradeType( const char & value ){ appendSafely<FieldBidTradeType>( value ); }
     void appendBasisPxType( const char & value ){ appendSafely<FieldBasisPxType>( value ); }
     void appendStrikeTime( const std::string_view & value ){ appendSafely<FieldStrikeTime>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message BidResponse
class BidResponseBuilder: protected ReusableMessageBuilder
{
   public:

     static BidResponseBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<BidResponseBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendBidID( const std::string_view & value ){ appendSafely<FieldBidID>( value ); }
     void appendClientBidID( const std::string_view & value ){ appendSafely<FieldClientBidID>( value ); }
     BidComponentsBuilder & appendNoBidComponents( unsigned count ) { appendSafely<FieldNoBidComponents>( count ); return *reinterpret_cast<BidComponentsBuilder*>( this ); }
};


// Message ListStrikePrice
class ListStrikePriceBuilder: protected ReusableMessageBuilder
{
   public:

     static ListStrikePriceBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ListStrikePriceBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendListID( const std::string_view & value ){ appendSafely<FieldListID>( value ); }
     void appendTotNoStrikes( const int & value ){ appendSafely<FieldTotNoStrikes>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     StrikesBuilder & appendNoStrikes( unsigned count ) { appendSafely<FieldNoStrikes>( count ); return *reinterpret_cast<StrikesBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
};


// Message XMLnonFIX
class XMLnonFIXBuilder: protected ReusableMessageBuilder
{
   public:

     static XMLnonFIXBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<XMLnonFIXBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
};


// Message RegistrationInstructions
class RegistrationInstructionsBuilder: protected ReusableMessageBuilder
{
   public:

     static RegistrationInstructionsBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<RegistrationInstructionsBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendRegistTransType( const char & value ){ appendSafely<FieldRegistTransType>( value ); }
     void appendRegistRefID( const std::string_view & value ){ appendSafely<FieldRegistRefID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendRegistAcctType( const std::string_view & value ){ appendSafely<FieldRegistAcctType>( value ); }
     void appendTaxAdvantageType( const int & value ){ appendSafely<FieldTaxAdvantageType>( value ); }
     void appendOwnershipType( const char & value ){ appendSafely<FieldOwnershipType>( value ); }
     RegistDtlsBuilder & appendNoRegistDtls( unsigned count ) { appendSafely<FieldNoRegistDtls>( count ); return *reinterpret_cast<RegistDtlsBuilder*>( this ); }
     DistribInstsBuilder & appendNoDistribInsts( unsigned count ) { appendSafely<FieldNoDistribInsts>( count ); return *reinterpret_cast<DistribInstsBuilder*>( this ); }
};


// Message RegistrationInstructionsResponse
class RegistrationInstructionsResponseBuilder: protected ReusableMessageBuilder
{
   public:

     static RegistrationInstructionsResponseBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<RegistrationInstructionsResponseBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendRegistTransType( const char & value ){ appendSafely<FieldRegistTransType>( value ); }
     void appendRegistRefID( const std::string_view & value ){ appendSafely<FieldRegistRefID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendRegistStatus( const char & value ){ appendSafely<FieldRegistStatus>( value ); }
     void appendRegistRejReasonCode( const int & value ){ appendSafely<FieldRegistRejReasonCode>( value ); }
     void appendRegistRejReasonText( const std::string_view & value ){ appendSafely<FieldRegistRejReasonText>( value ); }
};


// Message OrderMassCancelRequest
class OrderMassCancelRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderMassCancelRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderMassCancelRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendMassCancelRequestType( const char & value ){ appendSafely<FieldMassCancelRequestType>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message OrderMassCancelReport
class OrderMassCancelReportBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderMassCancelReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderMassCancelReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendMassCancelRequestType( const char & value ){ appendSafely<FieldMassCancelRequestType>( value ); }
     void appendMassCancelResponse( const char & value ){ appendSafely<FieldMassCancelResponse>( value ); }
     void appendMassCancelRejectReason( const char & value ){ appendSafely<FieldMassCancelRejectReason>( value ); }
     void appendTotalAffectedOrders( const int & value ){ appendSafely<FieldTotalAffectedOrders>( value ); }
     AffectedOrdersBuilder & appendNoAffectedOrders( unsigned count ) { appendSafely<FieldNoAffectedOrders>( count ); return *reinterpret_cast<AffectedOrdersBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message NewOrderCross
class NewOrderCrossBuilder: protected ReusableMessageBuilder
{
   public:

     static NewOrderCrossBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NewOrderCrossBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCrossID( const std::string_view & value ){ appendSafely<FieldCrossID>( value ); }
     void appendCrossType( const int & value ){ appendSafely<FieldCrossType>( value ); }
     void appendCrossPrioritization( const int & value ){ appendSafely<FieldCrossPrioritization>( value ); }
     SidesBuilder & appendNoSides( unsigned count ) { appendSafely<FieldNoSides>( count ); return *reinterpret_cast<SidesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendPrevClosePx( const Float & value ){ appendSafely<FieldPrevClosePx>( value ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
};


// Message CrossOrderCancelReplaceRequest
class CrossOrderCancelReplaceRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static CrossOrderCancelReplaceRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CrossOrderCancelReplaceRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendCrossID( const std::string_view & value ){ appendSafely<FieldCrossID>( value ); }
     void appendOrigCrossID( const std::string_view & value ){ appendSafely<FieldOrigCrossID>( value ); }
     void appendCrossType( const int & value ){ appendSafely<FieldCrossType>( value ); }
     void appendCrossPrioritization( const int & value ){ appendSafely<FieldCrossPrioritization>( value ); }
     SidesBuilder & appendNoSides( unsigned count ) { appendSafely<FieldNoSides>( count ); return *reinterpret_cast<SidesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendPrevClosePx( const Float & value ){ appendSafely<FieldPrevClosePx>( value ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
};


// Message CrossOrderCancelRequest
class CrossOrderCancelRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static CrossOrderCancelRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CrossOrderCancelRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendCrossID( const std::string_view & value ){ appendSafely<FieldCrossID>( value ); }
     void appendOrigCrossID( const std::string_view & value ){ appendSafely<FieldOrigCrossID>( value ); }
     void appendCrossType( const int & value ){ appendSafely<FieldCrossType>( value ); }
     void appendCrossPrioritization( const int & value ){ appendSafely<FieldCrossPrioritization>( value ); }
     SidesBuilder & appendNoSides( unsigned count ) { appendSafely<FieldNoSides>( count ); return *reinterpret_cast<SidesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
};


// Message SecurityTypeRequest
class SecurityTypeRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityTypeRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityTypeRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
};


// Message SecurityTypes
class SecurityTypesBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityTypesBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityTypesBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityResponseID( const std::string_view & value ){ appendSafely<FieldSecurityResponseID>( value ); }
     void appendSecurityResponseType( const int & value ){ appendSafely<FieldSecurityResponseType>( value ); }
     void appendTotNoSecurityTypes( const int & value ){ appendSafely<FieldTotNoSecurityTypes>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     SecurityTypesBuilder & appendNoSecurityTypes( unsigned count ) { appendSafely<FieldNoSecurityTypes>( count ); return *reinterpret_cast<SecurityTypesBuilder*>( this ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message SecurityListRequest
class SecurityListRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityListRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityListRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityListRequestType( const int & value ){ appendSafely<FieldSecurityListRequestType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message SecurityList
class SecurityListBuilder: protected ReusableMessageBuilder
{
   public:

     static SecurityListBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SecurityListBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityResponseID( const std::string_view & value ){ appendSafely<FieldSecurityResponseID>( value ); }
     void appendSecurityRequestResult( const int & value ){ appendSafely<FieldSecurityRequestResult>( value ); }
     void appendTotNoRelatedSym( const int & value ){ appendSafely<FieldTotNoRelatedSym>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
};


// Message DerivativeSecurityListRequest
class DerivativeSecurityListRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static DerivativeSecurityListRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<DerivativeSecurityListRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityListRequestType( const int & value ){ appendSafely<FieldSecurityListRequestType>( value ); }
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message DerivativeSecurityList
class DerivativeSecurityListBuilder: protected ReusableMessageBuilder
{
   public:

     static DerivativeSecurityListBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<DerivativeSecurityListBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSecurityReqID( const std::string_view & value ){ appendSafely<FieldSecurityReqID>( value ); }
     void appendSecurityResponseID( const std::string_view & value ){ appendSafely<FieldSecurityResponseID>( value ); }
     void appendSecurityRequestResult( const int & value ){ appendSafely<FieldSecurityRequestResult>( value ); }
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendTotNoRelatedSym( const int & value ){ appendSafely<FieldTotNoRelatedSym>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
};


// Message NewOrderMultileg
class NewOrderMultilegBuilder: protected ReusableMessageBuilder
{
   public:

     static NewOrderMultilegBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NewOrderMultilegBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDayBookingInst( const char & value ){ appendSafely<FieldDayBookingInst>( value ); }
     void appendBookingUnit( const char & value ){ appendSafely<FieldBookingUnit>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendCashMargin( const char & value ){ appendSafely<FieldCashMargin>( value ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendPrevClosePx( const Float & value ){ appendSafely<FieldPrevClosePx>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendSolicitedFlag( const bool & value ){ appendSafely<FieldSolicitedFlag>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendForexReq( const bool & value ){ appendSafely<FieldForexReq>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendCoveredOrUncovered( const int & value ){ appendSafely<FieldCoveredOrUncovered>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
     void appendMultiLegRptTypeReq( const int & value ){ appendSafely<FieldMultiLegRptTypeReq>( value ); }
};


// Message MultilegOrderCancelReplace
class MultilegOrderCancelReplaceBuilder: protected ReusableMessageBuilder
{
   public:

     static MultilegOrderCancelReplaceBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<MultilegOrderCancelReplaceBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendOrigClOrdID( const std::string_view & value ){ appendSafely<FieldOrigClOrdID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     void appendClOrdLinkID( const std::string_view & value ){ appendSafely<FieldClOrdLinkID>( value ); }
     void appendOrigOrdModTime( const std::string_view & value ){ appendSafely<FieldOrigOrdModTime>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendDayBookingInst( const char & value ){ appendSafely<FieldDayBookingInst>( value ); }
     void appendBookingUnit( const char & value ){ appendSafely<FieldBookingUnit>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendCashMargin( const char & value ){ appendSafely<FieldCashMargin>( value ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendHandlInst( const char & value ){ appendSafely<FieldHandlInst>( value ); }
     void appendExecInst( const std::string_view & value ){ appendSafely<FieldExecInst>( value ); }
     void appendMinQty( const Float & value ){ appendSafely<FieldMinQty>( value ); }
     void appendMaxFloor( const Float & value ){ appendSafely<FieldMaxFloor>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendPrevClosePx( const Float & value ){ appendSafely<FieldPrevClosePx>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendLocateReqd( const bool & value ){ appendSafely<FieldLocateReqd>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendStopPx( const Float & value ){ appendSafely<FieldStopPx>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendComplianceID( const std::string_view & value ){ appendSafely<FieldComplianceID>( value ); }
     void appendSolicitedFlag( const bool & value ){ appendSafely<FieldSolicitedFlag>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendTimeInForce( const char & value ){ appendSafely<FieldTimeInForce>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendGTBookingInst( const int & value ){ appendSafely<FieldGTBookingInst>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendForexReq( const bool & value ){ appendSafely<FieldForexReq>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendCoveredOrUncovered( const int & value ){ appendSafely<FieldCoveredOrUncovered>( value ); }
     void appendMaxShow( const Float & value ){ appendSafely<FieldMaxShow>( value ); }
     void appendPegOffsetValue( const Float & value ){ appendSafely<FieldPegOffsetValue>( value ); }
     void appendPegMoveType( const int & value ){ appendSafely<FieldPegMoveType>( value ); }
     void appendPegOffsetType( const int & value ){ appendSafely<FieldPegOffsetType>( value ); }
     void appendPegLimitType( const int & value ){ appendSafely<FieldPegLimitType>( value ); }
     void appendPegRoundDirection( const int & value ){ appendSafely<FieldPegRoundDirection>( value ); }
     void appendPegScope( const int & value ){ appendSafely<FieldPegScope>( value ); }
     void appendDiscretionInst( const char & value ){ appendSafely<FieldDiscretionInst>( value ); }
     void appendDiscretionOffsetValue( const Float & value ){ appendSafely<FieldDiscretionOffsetValue>( value ); }
     void appendDiscretionMoveType( const int & value ){ appendSafely<FieldDiscretionMoveType>( value ); }
     void appendDiscretionOffsetType( const int & value ){ appendSafely<FieldDiscretionOffsetType>( value ); }
     void appendDiscretionLimitType( const int & value ){ appendSafely<FieldDiscretionLimitType>( value ); }
     void appendDiscretionRoundDirection( const int & value ){ appendSafely<FieldDiscretionRoundDirection>( value ); }
     void appendDiscretionScope( const int & value ){ appendSafely<FieldDiscretionScope>( value ); }
     void appendTargetStrategy( const int & value ){ appendSafely<FieldTargetStrategy>( value ); }
     void appendTargetStrategyParameters( const std::string_view & value ){ appendSafely<FieldTargetStrategyParameters>( value ); }
     void appendParticipationRate( const Float & value ){ appendSafely<FieldParticipationRate>( value ); }
     void appendCancellationRights( const char & value ){ appendSafely<FieldCancellationRights>( value ); }
     void appendMoneyLaunderingStatus( const char & value ){ appendSafely<FieldMoneyLaunderingStatus>( value ); }
     void appendRegistID( const std::string_view & value ){ appendSafely<FieldRegistID>( value ); }
     void appendDesignation( const std::string_view & value ){ appendSafely<FieldDesignation>( value ); }
     void appendMultiLegRptTypeReq( const int & value ){ appendSafely<FieldMultiLegRptTypeReq>( value ); }
};


// Message TradeCaptureReportRequest
class TradeCaptureReportRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static TradeCaptureReportRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TradeCaptureReportRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTradeRequestID( const std::string_view & value ){ appendSafely<FieldTradeRequestID>( value ); }
     void appendTradeRequestType( const int & value ){ appendSafely<FieldTradeRequestType>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendTradeReportID( const std::string_view & value ){ appendSafely<FieldTradeReportID>( value ); }
     void appendSecondaryTradeReportID( const std::string_view & value ){ appendSafely<FieldSecondaryTradeReportID>( value ); }
     void appendExecID( const std::string_view & value ){ appendSafely<FieldExecID>( value ); }
     void appendExecType( const char & value ){ appendSafely<FieldExecType>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendMatchStatus( const char & value ){ appendSafely<FieldMatchStatus>( value ); }
     void appendTrdType( const int & value ){ appendSafely<FieldTrdType>( value ); }
     void appendTrdSubType( const int & value ){ appendSafely<FieldTrdSubType>( value ); }
     void appendTransferReason( const std::string_view & value ){ appendSafely<FieldTransferReason>( value ); }
     void appendSecondaryTrdType( const int & value ){ appendSafely<FieldSecondaryTrdType>( value ); }
     void appendTradeLinkID( const std::string_view & value ){ appendSafely<FieldTradeLinkID>( value ); }
     void appendTrdMatchID( const std::string_view & value ){ appendSafely<FieldTrdMatchID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     DatesBuilder & appendNoDates( unsigned count ) { appendSafely<FieldNoDates>( count ); return *reinterpret_cast<DatesBuilder*>( this ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendTimeBracket( const std::string_view & value ){ appendSafely<FieldTimeBracket>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendMultiLegReportingType( const char & value ){ appendSafely<FieldMultiLegReportingType>( value ); }
     void appendTradeInputSource( const std::string_view & value ){ appendSafely<FieldTradeInputSource>( value ); }
     void appendTradeInputDevice( const std::string_view & value ){ appendSafely<FieldTradeInputDevice>( value ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message TradeCaptureReport
class TradeCaptureReportBuilder: protected ReusableMessageBuilder
{
   public:

     static TradeCaptureReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TradeCaptureReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTradeReportID( const std::string_view & value ){ appendSafely<FieldTradeReportID>( value ); }
     void appendTradeReportTransType( const int & value ){ appendSafely<FieldTradeReportTransType>( value ); }
     void appendTradeReportType( const int & value ){ appendSafely<FieldTradeReportType>( value ); }
     void appendTradeRequestID( const std::string_view & value ){ appendSafely<FieldTradeRequestID>( value ); }
     void appendTrdType( const int & value ){ appendSafely<FieldTrdType>( value ); }
     void appendTrdSubType( const int & value ){ appendSafely<FieldTrdSubType>( value ); }
     void appendSecondaryTrdType( const int & value ){ appendSafely<FieldSecondaryTrdType>( value ); }
     void appendTransferReason( const std::string_view & value ){ appendSafely<FieldTransferReason>( value ); }
     void appendExecType( const char & value ){ appendSafely<FieldExecType>( value ); }
     void appendTotNumTradeReports( const int & value ){ appendSafely<FieldTotNumTradeReports>( value ); }
     void appendLastRptRequested( const bool & value ){ appendSafely<FieldLastRptRequested>( value ); }
     void appendUnsolicitedIndicator( const bool & value ){ appendSafely<FieldUnsolicitedIndicator>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendTradeReportRefID( const std::string_view & value ){ appendSafely<FieldTradeReportRefID>( value ); }
     void appendSecondaryTradeReportRefID( const std::string_view & value ){ appendSafely<FieldSecondaryTradeReportRefID>( value ); }
     void appendSecondaryTradeReportID( const std::string_view & value ){ appendSafely<FieldSecondaryTradeReportID>( value ); }
     void appendTradeLinkID( const std::string_view & value ){ appendSafely<FieldTradeLinkID>( value ); }
     void appendTrdMatchID( const std::string_view & value ){ appendSafely<FieldTrdMatchID>( value ); }
     void appendExecID( const std::string_view & value ){ appendSafely<FieldExecID>( value ); }
     void appendOrdStatus( const char & value ){ appendSafely<FieldOrdStatus>( value ); }
     void appendSecondaryExecID( const std::string_view & value ){ appendSafely<FieldSecondaryExecID>( value ); }
     void appendExecRestatementReason( const int & value ){ appendSafely<FieldExecRestatementReason>( value ); }
     void appendPreviouslyReported( const bool & value ){ appendSafely<FieldPreviouslyReported>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendUnderlyingTradingSessionID( const std::string_view & value ){ appendSafely<FieldUnderlyingTradingSessionID>( value ); }
     void appendUnderlyingTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldUnderlyingTradingSessionSubID>( value ); }
     void appendLastQty( const Float & value ){ appendSafely<FieldLastQty>( value ); }
     void appendLastPx( const Float & value ){ appendSafely<FieldLastPx>( value ); }
     void appendLastParPx( const Float & value ){ appendSafely<FieldLastParPx>( value ); }
     void appendLastSpotRate( const Float & value ){ appendSafely<FieldLastSpotRate>( value ); }
     void appendLastForwardPoints( const Float & value ){ appendSafely<FieldLastForwardPoints>( value ); }
     void appendLastMkt( const std::string_view & value ){ appendSafely<FieldLastMkt>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendAvgPx( const Float & value ){ appendSafely<FieldAvgPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendAvgPxIndicator( const int & value ){ appendSafely<FieldAvgPxIndicator>( value ); }
     PosAmtBuilder & appendNoPosAmt( unsigned count ) { appendSafely<FieldNoPosAmt>( count ); return *reinterpret_cast<PosAmtBuilder*>( this ); }
     void appendMultiLegReportingType( const char & value ){ appendSafely<FieldMultiLegReportingType>( value ); }
     void appendTradeLegRefID( const std::string_view & value ){ appendSafely<FieldTradeLegRefID>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendMatchStatus( const char & value ){ appendSafely<FieldMatchStatus>( value ); }
     void appendMatchType( const std::string_view & value ){ appendSafely<FieldMatchType>( value ); }
     SidesBuilder & appendNoSides( unsigned count ) { appendSafely<FieldNoSides>( count ); return *reinterpret_cast<SidesBuilder*>( this ); }
     void appendCopyMsgIndicator( const bool & value ){ appendSafely<FieldCopyMsgIndicator>( value ); }
     void appendPublishTrdIndicator( const bool & value ){ appendSafely<FieldPublishTrdIndicator>( value ); }
     void appendShortSaleReason( const int & value ){ appendSafely<FieldShortSaleReason>( value ); }
};


// Message OrderMassStatusRequest
class OrderMassStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static OrderMassStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<OrderMassStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendMassStatusReqID( const std::string_view & value ){ appendSafely<FieldMassStatusReqID>( value ); }
     void appendMassStatusReqType( const int & value ){ appendSafely<FieldMassStatusReqType>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendUnderlyingSymbol( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbol>( value ); }
     void appendUnderlyingSymbolSfx( const std::string_view & value ){ appendSafely<FieldUnderlyingSymbolSfx>( value ); }
     void appendUnderlyingSecurityID( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityID>( value ); }
     void appendUnderlyingSecurityIDSource( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityIDSource>( value ); }
     UnderlyingSecurityAltIDBuilder & appendNoUnderlyingSecurityAltID( unsigned count ) { appendSafely<FieldNoUnderlyingSecurityAltID>( count ); return *reinterpret_cast<UnderlyingSecurityAltIDBuilder*>( this ); }
     void appendUnderlyingProduct( const int & value ){ appendSafely<FieldUnderlyingProduct>( value ); }
     void appendUnderlyingCFICode( const std::string_view & value ){ appendSafely<FieldUnderlyingCFICode>( value ); }
     void appendUnderlyingSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityType>( value ); }
     void appendUnderlyingSecuritySubType( const std::string_view & value ){ appendSafely<FieldUnderlyingSecuritySubType>( value ); }
     void appendUnderlyingMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityMonthYear>( value ); }
     void appendUnderlyingMaturityDate( const std::string_view & value ){ appendSafely<FieldUnderlyingMaturityDate>( value ); }
     void appendUnderlyingPutOrCall( const int & value ){ appendSafely<FieldUnderlyingPutOrCall>( value ); }
     void appendUnderlyingCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldUnderlyingCouponPaymentDate>( value ); }
     void appendUnderlyingIssueDate( const std::string_view & value ){ appendSafely<FieldUnderlyingIssueDate>( value ); }
     void appendUnderlyingRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldUnderlyingRepoCollateralSecurityType>( value ); }
     void appendUnderlyingRepurchaseTerm( const int & value ){ appendSafely<FieldUnderlyingRepurchaseTerm>( value ); }
     void appendUnderlyingRepurchaseRate( const Float & value ){ appendSafely<FieldUnderlyingRepurchaseRate>( value ); }
     void appendUnderlyingFactor( const Float & value ){ appendSafely<FieldUnderlyingFactor>( value ); }
     void appendUnderlyingCreditRating( const std::string_view & value ){ appendSafely<FieldUnderlyingCreditRating>( value ); }
     void appendUnderlyingInstrRegistry( const std::string_view & value ){ appendSafely<FieldUnderlyingInstrRegistry>( value ); }
     void appendUnderlyingCountryOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingCountryOfIssue>( value ); }
     void appendUnderlyingStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingStateOrProvinceOfIssue>( value ); }
     void appendUnderlyingLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldUnderlyingLocaleOfIssue>( value ); }
     void appendUnderlyingRedemptionDate( const std::string_view & value ){ appendSafely<FieldUnderlyingRedemptionDate>( value ); }
     void appendUnderlyingStrikePrice( const Float & value ){ appendSafely<FieldUnderlyingStrikePrice>( value ); }
     void appendUnderlyingStrikeCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingStrikeCurrency>( value ); }
     void appendUnderlyingOptAttribute( const char & value ){ appendSafely<FieldUnderlyingOptAttribute>( value ); }
     void appendUnderlyingContractMultiplier( const Float & value ){ appendSafely<FieldUnderlyingContractMultiplier>( value ); }
     void appendUnderlyingCouponRate( const Float & value ){ appendSafely<FieldUnderlyingCouponRate>( value ); }
     void appendUnderlyingSecurityExchange( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityExchange>( value ); }
     void appendUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldUnderlyingIssuer>( value ); }
     void appendEncodedUnderlyingIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingIssuerLen>( value ); }
     void appendEncodedUnderlyingIssuer( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingIssuer>( value ); }
     void appendUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldUnderlyingSecurityDesc>( value ); }
     void appendEncodedUnderlyingSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedUnderlyingSecurityDescLen>( value ); }
     void appendEncodedUnderlyingSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedUnderlyingSecurityDesc>( value ); }
     void appendUnderlyingCPProgram( const std::string_view & value ){ appendSafely<FieldUnderlyingCPProgram>( value ); }
     void appendUnderlyingCPRegType( const std::string_view & value ){ appendSafely<FieldUnderlyingCPRegType>( value ); }
     void appendUnderlyingCurrency( const std::string_view & value ){ appendSafely<FieldUnderlyingCurrency>( value ); }
     void appendUnderlyingQty( const Float & value ){ appendSafely<FieldUnderlyingQty>( value ); }
     void appendUnderlyingPx( const Float & value ){ appendSafely<FieldUnderlyingPx>( value ); }
     void appendUnderlyingDirtyPrice( const Float & value ){ appendSafely<FieldUnderlyingDirtyPrice>( value ); }
     void appendUnderlyingEndPrice( const Float & value ){ appendSafely<FieldUnderlyingEndPrice>( value ); }
     void appendUnderlyingStartValue( const Float & value ){ appendSafely<FieldUnderlyingStartValue>( value ); }
     void appendUnderlyingCurrentValue( const Float & value ){ appendSafely<FieldUnderlyingCurrentValue>( value ); }
     void appendUnderlyingEndValue( const Float & value ){ appendSafely<FieldUnderlyingEndValue>( value ); }
     UnderlyingStipsBuilder & appendNoUnderlyingStips( unsigned count ) { appendSafely<FieldNoUnderlyingStips>( count ); return *reinterpret_cast<UnderlyingStipsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
};


// Message QuoteRequestReject
class QuoteRequestRejectBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteRequestRejectBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteRequestRejectBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendRFQReqID( const std::string_view & value ){ appendSafely<FieldRFQReqID>( value ); }
     void appendQuoteRequestRejectReason( const int & value ){ appendSafely<FieldQuoteRequestRejectReason>( value ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message RFQRequest
class RFQRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static RFQRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<RFQRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendRFQReqID( const std::string_view & value ){ appendSafely<FieldRFQReqID>( value ); }
     RelatedSymBuilder & appendNoRelatedSym( unsigned count ) { appendSafely<FieldNoRelatedSym>( count ); return *reinterpret_cast<RelatedSymBuilder*>( this ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
};


// Message QuoteStatusReport
class QuoteStatusReportBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteStatusReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteStatusReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteStatusReqID( const std::string_view & value ){ appendSafely<FieldQuoteStatusReqID>( value ); }
     void appendQuoteReqID( const std::string_view & value ){ appendSafely<FieldQuoteReqID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendQuoteRespID( const std::string_view & value ){ appendSafely<FieldQuoteRespID>( value ); }
     void appendQuoteType( const int & value ){ appendSafely<FieldQuoteType>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     QuoteQualifiersBuilder & appendNoQuoteQualifiers( unsigned count ) { appendSafely<FieldNoQuoteQualifiers>( count ); return *reinterpret_cast<QuoteQualifiersBuilder*>( this ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendBidPx( const Float & value ){ appendSafely<FieldBidPx>( value ); }
     void appendOfferPx( const Float & value ){ appendSafely<FieldOfferPx>( value ); }
     void appendMktBidPx( const Float & value ){ appendSafely<FieldMktBidPx>( value ); }
     void appendMktOfferPx( const Float & value ){ appendSafely<FieldMktOfferPx>( value ); }
     void appendMinBidSize( const Float & value ){ appendSafely<FieldMinBidSize>( value ); }
     void appendBidSize( const Float & value ){ appendSafely<FieldBidSize>( value ); }
     void appendMinOfferSize( const Float & value ){ appendSafely<FieldMinOfferSize>( value ); }
     void appendOfferSize( const Float & value ){ appendSafely<FieldOfferSize>( value ); }
     void appendValidUntilTime( const std::string_view & value ){ appendSafely<FieldValidUntilTime>( value ); }
     void appendBidSpotRate( const Float & value ){ appendSafely<FieldBidSpotRate>( value ); }
     void appendOfferSpotRate( const Float & value ){ appendSafely<FieldOfferSpotRate>( value ); }
     void appendBidForwardPoints( const Float & value ){ appendSafely<FieldBidForwardPoints>( value ); }
     void appendOfferForwardPoints( const Float & value ){ appendSafely<FieldOfferForwardPoints>( value ); }
     void appendMidPx( const Float & value ){ appendSafely<FieldMidPx>( value ); }
     void appendBidYield( const Float & value ){ appendSafely<FieldBidYield>( value ); }
     void appendMidYield( const Float & value ){ appendSafely<FieldMidYield>( value ); }
     void appendOfferYield( const Float & value ){ appendSafely<FieldOfferYield>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendBidForwardPoints2( const Float & value ){ appendSafely<FieldBidForwardPoints2>( value ); }
     void appendOfferForwardPoints2( const Float & value ){ appendSafely<FieldOfferForwardPoints2>( value ); }
     void appendSettlCurrBidFxRate( const Float & value ){ appendSafely<FieldSettlCurrBidFxRate>( value ); }
     void appendSettlCurrOfferFxRate( const Float & value ){ appendSafely<FieldSettlCurrOfferFxRate>( value ); }
     void appendSettlCurrFxRateCalc( const char & value ){ appendSafely<FieldSettlCurrFxRateCalc>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     void appendQuoteStatus( const int & value ){ appendSafely<FieldQuoteStatus>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message QuoteResponse
class QuoteResponseBuilder: protected ReusableMessageBuilder
{
   public:

     static QuoteResponseBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<QuoteResponseBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendQuoteRespID( const std::string_view & value ){ appendSafely<FieldQuoteRespID>( value ); }
     void appendQuoteID( const std::string_view & value ){ appendSafely<FieldQuoteID>( value ); }
     void appendQuoteRespType( const int & value ){ appendSafely<FieldQuoteRespType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendIOIID( const std::string_view & value ){ appendSafely<FieldIOIID>( value ); }
     void appendQuoteType( const int & value ){ appendSafely<FieldQuoteType>( value ); }
     QuoteQualifiersBuilder & appendNoQuoteQualifiers( unsigned count ) { appendSafely<FieldNoQuoteQualifiers>( count ); return *reinterpret_cast<QuoteQualifiersBuilder*>( this ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendOrderQty( const Float & value ){ appendSafely<FieldOrderQty>( value ); }
     void appendCashOrderQty( const Float & value ){ appendSafely<FieldCashOrderQty>( value ); }
     void appendOrderPercent( const Float & value ){ appendSafely<FieldOrderPercent>( value ); }
     void appendRoundingDirection( const char & value ){ appendSafely<FieldRoundingDirection>( value ); }
     void appendRoundingModulus( const Float & value ){ appendSafely<FieldRoundingModulus>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendSettlDate2( const std::string_view & value ){ appendSafely<FieldSettlDate2>( value ); }
     void appendOrderQty2( const Float & value ){ appendSafely<FieldOrderQty2>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendBidPx( const Float & value ){ appendSafely<FieldBidPx>( value ); }
     void appendOfferPx( const Float & value ){ appendSafely<FieldOfferPx>( value ); }
     void appendMktBidPx( const Float & value ){ appendSafely<FieldMktBidPx>( value ); }
     void appendMktOfferPx( const Float & value ){ appendSafely<FieldMktOfferPx>( value ); }
     void appendMinBidSize( const Float & value ){ appendSafely<FieldMinBidSize>( value ); }
     void appendBidSize( const Float & value ){ appendSafely<FieldBidSize>( value ); }
     void appendMinOfferSize( const Float & value ){ appendSafely<FieldMinOfferSize>( value ); }
     void appendOfferSize( const Float & value ){ appendSafely<FieldOfferSize>( value ); }
     void appendValidUntilTime( const std::string_view & value ){ appendSafely<FieldValidUntilTime>( value ); }
     void appendBidSpotRate( const Float & value ){ appendSafely<FieldBidSpotRate>( value ); }
     void appendOfferSpotRate( const Float & value ){ appendSafely<FieldOfferSpotRate>( value ); }
     void appendBidForwardPoints( const Float & value ){ appendSafely<FieldBidForwardPoints>( value ); }
     void appendOfferForwardPoints( const Float & value ){ appendSafely<FieldOfferForwardPoints>( value ); }
     void appendMidPx( const Float & value ){ appendSafely<FieldMidPx>( value ); }
     void appendBidYield( const Float & value ){ appendSafely<FieldBidYield>( value ); }
     void appendMidYield( const Float & value ){ appendSafely<FieldMidYield>( value ); }
     void appendOfferYield( const Float & value ){ appendSafely<FieldOfferYield>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendOrdType( const char & value ){ appendSafely<FieldOrdType>( value ); }
     void appendBidForwardPoints2( const Float & value ){ appendSafely<FieldBidForwardPoints2>( value ); }
     void appendOfferForwardPoints2( const Float & value ){ appendSafely<FieldOfferForwardPoints2>( value ); }
     void appendSettlCurrBidFxRate( const Float & value ){ appendSafely<FieldSettlCurrBidFxRate>( value ); }
     void appendSettlCurrOfferFxRate( const Float & value ){ appendSafely<FieldSettlCurrOfferFxRate>( value ); }
     void appendSettlCurrFxRateCalc( const char & value ){ appendSafely<FieldSettlCurrFxRateCalc>( value ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendExDestination( const std::string_view & value ){ appendSafely<FieldExDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
};


// Message Confirmation
class ConfirmationBuilder: protected ReusableMessageBuilder
{
   public:

     static ConfirmationBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ConfirmationBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendConfirmID( const std::string_view & value ){ appendSafely<FieldConfirmID>( value ); }
     void appendConfirmRefID( const std::string_view & value ){ appendSafely<FieldConfirmRefID>( value ); }
     void appendConfirmReqID( const std::string_view & value ){ appendSafely<FieldConfirmReqID>( value ); }
     void appendConfirmTransType( const int & value ){ appendSafely<FieldConfirmTransType>( value ); }
     void appendConfirmType( const int & value ){ appendSafely<FieldConfirmType>( value ); }
     void appendCopyMsgIndicator( const bool & value ){ appendSafely<FieldCopyMsgIndicator>( value ); }
     void appendLegalConfirm( const bool & value ){ appendSafely<FieldLegalConfirm>( value ); }
     void appendConfirmStatus( const int & value ){ appendSafely<FieldConfirmStatus>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     OrdersBuilder & appendNoOrders( unsigned count ) { appendSafely<FieldNoOrders>( count ); return *reinterpret_cast<OrdersBuilder*>( this ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     void appendSecondaryAllocID( const std::string_view & value ){ appendSafely<FieldSecondaryAllocID>( value ); }
     void appendIndividualAllocID( const std::string_view & value ){ appendSafely<FieldIndividualAllocID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendAllocQty( const Float & value ){ appendSafely<FieldAllocQty>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendLastMkt( const std::string_view & value ){ appendSafely<FieldLastMkt>( value ); }
     CapacitiesBuilder & appendNoCapacities( unsigned count ) { appendSafely<FieldNoCapacities>( count ); return *reinterpret_cast<CapacitiesBuilder*>( this ); }
     void appendAllocAccount( const std::string_view & value ){ appendSafely<FieldAllocAccount>( value ); }
     void appendAllocAcctIDSource( const int & value ){ appendSafely<FieldAllocAcctIDSource>( value ); }
     void appendAllocAccountType( const int & value ){ appendSafely<FieldAllocAccountType>( value ); }
     void appendAvgPx( const Float & value ){ appendSafely<FieldAvgPx>( value ); }
     void appendAvgPxPrecision( const int & value ){ appendSafely<FieldAvgPxPrecision>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAvgParPx( const Float & value ){ appendSafely<FieldAvgParPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendReportedPx( const Float & value ){ appendSafely<FieldReportedPx>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendProcessCode( const char & value ){ appendSafely<FieldProcessCode>( value ); }
     void appendGrossTradeAmt( const Float & value ){ appendSafely<FieldGrossTradeAmt>( value ); }
     void appendNumDaysInterest( const int & value ){ appendSafely<FieldNumDaysInterest>( value ); }
     void appendExDate( const std::string_view & value ){ appendSafely<FieldExDate>( value ); }
     void appendAccruedInterestRate( const Float & value ){ appendSafely<FieldAccruedInterestRate>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendInterestAtMaturity( const Float & value ){ appendSafely<FieldInterestAtMaturity>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendConcession( const Float & value ){ appendSafely<FieldConcession>( value ); }
     void appendTotalTakedown( const Float & value ){ appendSafely<FieldTotalTakedown>( value ); }
     void appendNetMoney( const Float & value ){ appendSafely<FieldNetMoney>( value ); }
     void appendMaturityNetMoney( const Float & value ){ appendSafely<FieldMaturityNetMoney>( value ); }
     void appendSettlCurrAmt( const Float & value ){ appendSafely<FieldSettlCurrAmt>( value ); }
     void appendSettlCurrency( const std::string_view & value ){ appendSafely<FieldSettlCurrency>( value ); }
     void appendSettlCurrFxRate( const Float & value ){ appendSafely<FieldSettlCurrFxRate>( value ); }
     void appendSettlCurrFxRateCalc( const char & value ){ appendSafely<FieldSettlCurrFxRateCalc>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendSettlDeliveryType( const int & value ){ appendSafely<FieldSettlDeliveryType>( value ); }
     void appendStandInstDbType( const int & value ){ appendSafely<FieldStandInstDbType>( value ); }
     void appendStandInstDbName( const std::string_view & value ){ appendSafely<FieldStandInstDbName>( value ); }
     void appendStandInstDbID( const std::string_view & value ){ appendSafely<FieldStandInstDbID>( value ); }
     DlvyInstBuilder & appendNoDlvyInst( unsigned count ) { appendSafely<FieldNoDlvyInst>( count ); return *reinterpret_cast<DlvyInstBuilder*>( this ); }
     void appendCommission( const Float & value ){ appendSafely<FieldCommission>( value ); }
     void appendCommType( const char & value ){ appendSafely<FieldCommType>( value ); }
     void appendCommCurrency( const std::string_view & value ){ appendSafely<FieldCommCurrency>( value ); }
     void appendFundRenewWaiv( const char & value ){ appendSafely<FieldFundRenewWaiv>( value ); }
     void appendSharedCommission( const Float & value ){ appendSafely<FieldSharedCommission>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     MiscFeesBuilder & appendNoMiscFees( unsigned count ) { appendSafely<FieldNoMiscFees>( count ); return *reinterpret_cast<MiscFeesBuilder*>( this ); }
};


// Message PositionMaintenanceRequest
class PositionMaintenanceRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static PositionMaintenanceRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<PositionMaintenanceRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendPosReqID( const std::string_view & value ){ appendSafely<FieldPosReqID>( value ); }
     void appendPosTransType( const int & value ){ appendSafely<FieldPosTransType>( value ); }
     void appendPosMaintAction( const int & value ){ appendSafely<FieldPosMaintAction>( value ); }
     void appendOrigPosReqRefID( const std::string_view & value ){ appendSafely<FieldOrigPosReqRefID>( value ); }
     void appendPosMaintRptRefID( const std::string_view & value ){ appendSafely<FieldPosMaintRptRefID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     PositionsBuilder & appendNoPositions( unsigned count ) { appendSafely<FieldNoPositions>( count ); return *reinterpret_cast<PositionsBuilder*>( this ); }
     void appendAdjustmentType( const int & value ){ appendSafely<FieldAdjustmentType>( value ); }
     void appendContraryInstructionIndicator( const bool & value ){ appendSafely<FieldContraryInstructionIndicator>( value ); }
     void appendPriorSpreadIndicator( const bool & value ){ appendSafely<FieldPriorSpreadIndicator>( value ); }
     void appendThresholdAmount( const Float & value ){ appendSafely<FieldThresholdAmount>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message PositionMaintenanceReport
class PositionMaintenanceReportBuilder: protected ReusableMessageBuilder
{
   public:

     static PositionMaintenanceReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<PositionMaintenanceReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendPosMaintRptID( const std::string_view & value ){ appendSafely<FieldPosMaintRptID>( value ); }
     void appendPosTransType( const int & value ){ appendSafely<FieldPosTransType>( value ); }
     void appendPosReqID( const std::string_view & value ){ appendSafely<FieldPosReqID>( value ); }
     void appendPosMaintAction( const int & value ){ appendSafely<FieldPosMaintAction>( value ); }
     void appendOrigPosReqRefID( const std::string_view & value ){ appendSafely<FieldOrigPosReqRefID>( value ); }
     void appendPosMaintStatus( const int & value ){ appendSafely<FieldPosMaintStatus>( value ); }
     void appendPosMaintResult( const int & value ){ appendSafely<FieldPosMaintResult>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     PositionsBuilder & appendNoPositions( unsigned count ) { appendSafely<FieldNoPositions>( count ); return *reinterpret_cast<PositionsBuilder*>( this ); }
     PosAmtBuilder & appendNoPosAmt( unsigned count ) { appendSafely<FieldNoPosAmt>( count ); return *reinterpret_cast<PosAmtBuilder*>( this ); }
     void appendAdjustmentType( const int & value ){ appendSafely<FieldAdjustmentType>( value ); }
     void appendThresholdAmount( const Float & value ){ appendSafely<FieldThresholdAmount>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message RequestForPositions
class RequestForPositionsBuilder: protected ReusableMessageBuilder
{
   public:

     static RequestForPositionsBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<RequestForPositionsBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendPosReqID( const std::string_view & value ){ appendSafely<FieldPosReqID>( value ); }
     void appendPosReqType( const int & value ){ appendSafely<FieldPosReqType>( value ); }
     void appendMatchStatus( const char & value ){ appendSafely<FieldMatchStatus>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     TradingSessionsBuilder & appendNoTradingSessions( unsigned count ) { appendSafely<FieldNoTradingSessions>( count ); return *reinterpret_cast<TradingSessionsBuilder*>( this ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message RequestForPositionsAck
class RequestForPositionsAckBuilder: protected ReusableMessageBuilder
{
   public:

     static RequestForPositionsAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<RequestForPositionsAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendPosMaintRptID( const std::string_view & value ){ appendSafely<FieldPosMaintRptID>( value ); }
     void appendPosReqID( const std::string_view & value ){ appendSafely<FieldPosReqID>( value ); }
     void appendTotalNumPosReports( const int & value ){ appendSafely<FieldTotalNumPosReports>( value ); }
     void appendUnsolicitedIndicator( const bool & value ){ appendSafely<FieldUnsolicitedIndicator>( value ); }
     void appendPosReqResult( const int & value ){ appendSafely<FieldPosReqResult>( value ); }
     void appendPosReqStatus( const int & value ){ appendSafely<FieldPosReqStatus>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message PositionReport
class PositionReportBuilder: protected ReusableMessageBuilder
{
   public:

     static PositionReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<PositionReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendPosMaintRptID( const std::string_view & value ){ appendSafely<FieldPosMaintRptID>( value ); }
     void appendPosReqID( const std::string_view & value ){ appendSafely<FieldPosReqID>( value ); }
     void appendPosReqType( const int & value ){ appendSafely<FieldPosReqType>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendTotalNumPosReports( const int & value ){ appendSafely<FieldTotalNumPosReports>( value ); }
     void appendUnsolicitedIndicator( const bool & value ){ appendSafely<FieldUnsolicitedIndicator>( value ); }
     void appendPosReqResult( const int & value ){ appendSafely<FieldPosReqResult>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendSettlPrice( const Float & value ){ appendSafely<FieldSettlPrice>( value ); }
     void appendSettlPriceType( const int & value ){ appendSafely<FieldSettlPriceType>( value ); }
     void appendPriorSettlPrice( const Float & value ){ appendSafely<FieldPriorSettlPrice>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     PositionsBuilder & appendNoPositions( unsigned count ) { appendSafely<FieldNoPositions>( count ); return *reinterpret_cast<PositionsBuilder*>( this ); }
     PosAmtBuilder & appendNoPosAmt( unsigned count ) { appendSafely<FieldNoPosAmt>( count ); return *reinterpret_cast<PosAmtBuilder*>( this ); }
     void appendRegistStatus( const char & value ){ appendSafely<FieldRegistStatus>( value ); }
     void appendDeliveryDate( const std::string_view & value ){ appendSafely<FieldDeliveryDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message TradeCaptureReportRequestAck
class TradeCaptureReportRequestAckBuilder: protected ReusableMessageBuilder
{
   public:

     static TradeCaptureReportRequestAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TradeCaptureReportRequestAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTradeRequestID( const std::string_view & value ){ appendSafely<FieldTradeRequestID>( value ); }
     void appendTradeRequestType( const int & value ){ appendSafely<FieldTradeRequestType>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendTotNumTradeReports( const int & value ){ appendSafely<FieldTotNumTradeReports>( value ); }
     void appendTradeRequestResult( const int & value ){ appendSafely<FieldTradeRequestResult>( value ); }
     void appendTradeRequestStatus( const int & value ){ appendSafely<FieldTradeRequestStatus>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendMultiLegReportingType( const char & value ){ appendSafely<FieldMultiLegReportingType>( value ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message TradeCaptureReportAck
class TradeCaptureReportAckBuilder: protected ReusableMessageBuilder
{
   public:

     static TradeCaptureReportAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<TradeCaptureReportAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendTradeReportID( const std::string_view & value ){ appendSafely<FieldTradeReportID>( value ); }
     void appendTradeReportTransType( const int & value ){ appendSafely<FieldTradeReportTransType>( value ); }
     void appendTradeReportType( const int & value ){ appendSafely<FieldTradeReportType>( value ); }
     void appendTrdType( const int & value ){ appendSafely<FieldTrdType>( value ); }
     void appendTrdSubType( const int & value ){ appendSafely<FieldTrdSubType>( value ); }
     void appendSecondaryTrdType( const int & value ){ appendSafely<FieldSecondaryTrdType>( value ); }
     void appendTransferReason( const std::string_view & value ){ appendSafely<FieldTransferReason>( value ); }
     void appendExecType( const char & value ){ appendSafely<FieldExecType>( value ); }
     void appendTradeReportRefID( const std::string_view & value ){ appendSafely<FieldTradeReportRefID>( value ); }
     void appendSecondaryTradeReportRefID( const std::string_view & value ){ appendSafely<FieldSecondaryTradeReportRefID>( value ); }
     void appendTrdRptStatus( const int & value ){ appendSafely<FieldTrdRptStatus>( value ); }
     void appendTradeReportRejectReason( const int & value ){ appendSafely<FieldTradeReportRejectReason>( value ); }
     void appendSecondaryTradeReportID( const std::string_view & value ){ appendSafely<FieldSecondaryTradeReportID>( value ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendTradeLinkID( const std::string_view & value ){ appendSafely<FieldTradeLinkID>( value ); }
     void appendTrdMatchID( const std::string_view & value ){ appendSafely<FieldTrdMatchID>( value ); }
     void appendExecID( const std::string_view & value ){ appendSafely<FieldExecID>( value ); }
     void appendSecondaryExecID( const std::string_view & value ){ appendSafely<FieldSecondaryExecID>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendClearingFeeIndicator( const std::string_view & value ){ appendSafely<FieldClearingFeeIndicator>( value ); }
     void appendOrderCapacity( const char & value ){ appendSafely<FieldOrderCapacity>( value ); }
     void appendOrderRestrictions( const std::string_view & value ){ appendSafely<FieldOrderRestrictions>( value ); }
     void appendCustOrderCapacity( const int & value ){ appendSafely<FieldCustOrderCapacity>( value ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAcctIDSource( const int & value ){ appendSafely<FieldAcctIDSource>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendPreallocMethod( const char & value ){ appendSafely<FieldPreallocMethod>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
};


// Message AllocationReport
class AllocationReportBuilder: protected ReusableMessageBuilder
{
   public:

     static AllocationReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<AllocationReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendAllocReportID( const std::string_view & value ){ appendSafely<FieldAllocReportID>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     void appendAllocTransType( const char & value ){ appendSafely<FieldAllocTransType>( value ); }
     void appendAllocReportRefID( const std::string_view & value ){ appendSafely<FieldAllocReportRefID>( value ); }
     void appendAllocCancReplaceReason( const int & value ){ appendSafely<FieldAllocCancReplaceReason>( value ); }
     void appendSecondaryAllocID( const std::string_view & value ){ appendSafely<FieldSecondaryAllocID>( value ); }
     void appendAllocReportType( const int & value ){ appendSafely<FieldAllocReportType>( value ); }
     void appendAllocStatus( const int & value ){ appendSafely<FieldAllocStatus>( value ); }
     void appendAllocRejCode( const int & value ){ appendSafely<FieldAllocRejCode>( value ); }
     void appendRefAllocID( const std::string_view & value ){ appendSafely<FieldRefAllocID>( value ); }
     void appendAllocIntermedReqType( const int & value ){ appendSafely<FieldAllocIntermedReqType>( value ); }
     void appendAllocLinkID( const std::string_view & value ){ appendSafely<FieldAllocLinkID>( value ); }
     void appendAllocLinkType( const int & value ){ appendSafely<FieldAllocLinkType>( value ); }
     void appendBookingRefID( const std::string_view & value ){ appendSafely<FieldBookingRefID>( value ); }
     void appendAllocNoOrdersType( const int & value ){ appendSafely<FieldAllocNoOrdersType>( value ); }
     OrdersBuilder & appendNoOrders( unsigned count ) { appendSafely<FieldNoOrders>( count ); return *reinterpret_cast<OrdersBuilder*>( this ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     void appendPreviouslyReported( const bool & value ){ appendSafely<FieldPreviouslyReported>( value ); }
     void appendReversalIndicator( const bool & value ){ appendSafely<FieldReversalIndicator>( value ); }
     void appendMatchType( const std::string_view & value ){ appendSafely<FieldMatchType>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendDeliveryForm( const int & value ){ appendSafely<FieldDeliveryForm>( value ); }
     void appendPctAtRisk( const Float & value ){ appendSafely<FieldPctAtRisk>( value ); }
     InstrAttribBuilder & appendNoInstrAttrib( unsigned count ) { appendSafely<FieldNoInstrAttrib>( count ); return *reinterpret_cast<InstrAttribBuilder*>( this ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendLastMkt( const std::string_view & value ){ appendSafely<FieldLastMkt>( value ); }
     void appendTradeOriginationDate( const std::string_view & value ){ appendSafely<FieldTradeOriginationDate>( value ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAvgPx( const Float & value ){ appendSafely<FieldAvgPx>( value ); }
     void appendAvgParPx( const Float & value ){ appendSafely<FieldAvgParPx>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     void appendAvgPxPrecision( const int & value ){ appendSafely<FieldAvgPxPrecision>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendSettlType( const char & value ){ appendSafely<FieldSettlType>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendBookingType( const int & value ){ appendSafely<FieldBookingType>( value ); }
     void appendGrossTradeAmt( const Float & value ){ appendSafely<FieldGrossTradeAmt>( value ); }
     void appendConcession( const Float & value ){ appendSafely<FieldConcession>( value ); }
     void appendTotalTakedown( const Float & value ){ appendSafely<FieldTotalTakedown>( value ); }
     void appendNetMoney( const Float & value ){ appendSafely<FieldNetMoney>( value ); }
     void appendPositionEffect( const char & value ){ appendSafely<FieldPositionEffect>( value ); }
     void appendAutoAcceptIndicator( const bool & value ){ appendSafely<FieldAutoAcceptIndicator>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     void appendNumDaysInterest( const int & value ){ appendSafely<FieldNumDaysInterest>( value ); }
     void appendAccruedInterestRate( const Float & value ){ appendSafely<FieldAccruedInterestRate>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendTotalAccruedInterestAmt( const Float & value ){ appendSafely<FieldTotalAccruedInterestAmt>( value ); }
     void appendInterestAtMaturity( const Float & value ){ appendSafely<FieldInterestAtMaturity>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendLegalConfirm( const bool & value ){ appendSafely<FieldLegalConfirm>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendYieldType( const std::string_view & value ){ appendSafely<FieldYieldType>( value ); }
     void appendYield( const Float & value ){ appendSafely<FieldYield>( value ); }
     void appendYieldCalcDate( const std::string_view & value ){ appendSafely<FieldYieldCalcDate>( value ); }
     void appendYieldRedemptionDate( const std::string_view & value ){ appendSafely<FieldYieldRedemptionDate>( value ); }
     void appendYieldRedemptionPrice( const Float & value ){ appendSafely<FieldYieldRedemptionPrice>( value ); }
     void appendYieldRedemptionPriceType( const int & value ){ appendSafely<FieldYieldRedemptionPriceType>( value ); }
     void appendTotNoAllocs( const int & value ){ appendSafely<FieldTotNoAllocs>( value ); }
     void appendLastFragment( const bool & value ){ appendSafely<FieldLastFragment>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
};


// Message AllocationReportAck
class AllocationReportAckBuilder: protected ReusableMessageBuilder
{
   public:

     static AllocationReportAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<AllocationReportAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendAllocReportID( const std::string_view & value ){ appendSafely<FieldAllocReportID>( value ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendSecondaryAllocID( const std::string_view & value ){ appendSafely<FieldSecondaryAllocID>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendAllocStatus( const int & value ){ appendSafely<FieldAllocStatus>( value ); }
     void appendAllocRejCode( const int & value ){ appendSafely<FieldAllocRejCode>( value ); }
     void appendAllocReportType( const int & value ){ appendSafely<FieldAllocReportType>( value ); }
     void appendAllocIntermedReqType( const int & value ){ appendSafely<FieldAllocIntermedReqType>( value ); }
     void appendMatchStatus( const char & value ){ appendSafely<FieldMatchStatus>( value ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
     AllocsBuilder & appendNoAllocs( unsigned count ) { appendSafely<FieldNoAllocs>( count ); return *reinterpret_cast<AllocsBuilder*>( this ); }
};


// Message ConfirmationAck
class ConfirmationAckBuilder: protected ReusableMessageBuilder
{
   public:

     static ConfirmationAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ConfirmationAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendConfirmID( const std::string_view & value ){ appendSafely<FieldConfirmID>( value ); }
     void appendTradeDate( const std::string_view & value ){ appendSafely<FieldTradeDate>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendAffirmStatus( const int & value ){ appendSafely<FieldAffirmStatus>( value ); }
     void appendConfirmRejReason( const int & value ){ appendSafely<FieldConfirmRejReason>( value ); }
     void appendMatchStatus( const char & value ){ appendSafely<FieldMatchStatus>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message SettlementInstructionRequest
class SettlementInstructionRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static SettlementInstructionRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<SettlementInstructionRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendSettlInstReqID( const std::string_view & value ){ appendSafely<FieldSettlInstReqID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAllocAccount( const std::string_view & value ){ appendSafely<FieldAllocAccount>( value ); }
     void appendAllocAcctIDSource( const int & value ){ appendSafely<FieldAllocAcctIDSource>( value ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendEffectiveTime( const std::string_view & value ){ appendSafely<FieldEffectiveTime>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     void appendLastUpdateTime( const std::string_view & value ){ appendSafely<FieldLastUpdateTime>( value ); }
     void appendStandInstDbType( const int & value ){ appendSafely<FieldStandInstDbType>( value ); }
     void appendStandInstDbName( const std::string_view & value ){ appendSafely<FieldStandInstDbName>( value ); }
     void appendStandInstDbID( const std::string_view & value ){ appendSafely<FieldStandInstDbID>( value ); }
};


// Message AssignmentReport
class AssignmentReportBuilder: protected ReusableMessageBuilder
{
   public:

     static AssignmentReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<AssignmentReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendAsgnRptID( const std::string_view & value ){ appendSafely<FieldAsgnRptID>( value ); }
     void appendTotNumAssignmentReports( const int & value ){ appendSafely<FieldTotNumAssignmentReports>( value ); }
     void appendLastRptRequested( const bool & value ){ appendSafely<FieldLastRptRequested>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     PositionsBuilder & appendNoPositions( unsigned count ) { appendSafely<FieldNoPositions>( count ); return *reinterpret_cast<PositionsBuilder*>( this ); }
     PosAmtBuilder & appendNoPosAmt( unsigned count ) { appendSafely<FieldNoPosAmt>( count ); return *reinterpret_cast<PosAmtBuilder*>( this ); }
     void appendThresholdAmount( const Float & value ){ appendSafely<FieldThresholdAmount>( value ); }
     void appendSettlPrice( const Float & value ){ appendSafely<FieldSettlPrice>( value ); }
     void appendSettlPriceType( const int & value ){ appendSafely<FieldSettlPriceType>( value ); }
     void appendUnderlyingSettlPrice( const Float & value ){ appendSafely<FieldUnderlyingSettlPrice>( value ); }
     void appendExpireDate( const std::string_view & value ){ appendSafely<FieldExpireDate>( value ); }
     void appendAssignmentMethod( const char & value ){ appendSafely<FieldAssignmentMethod>( value ); }
     void appendAssignmentUnit( const Float & value ){ appendSafely<FieldAssignmentUnit>( value ); }
     void appendOpenInterest( const Float & value ){ appendSafely<FieldOpenInterest>( value ); }
     void appendExerciseMethod( const char & value ){ appendSafely<FieldExerciseMethod>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message CollateralRequest
class CollateralRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static CollateralRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CollateralRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCollReqID( const std::string_view & value ){ appendSafely<FieldCollReqID>( value ); }
     void appendCollAsgnReason( const int & value ){ appendSafely<FieldCollAsgnReason>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     TradesBuilder & appendNoTrades( unsigned count ) { appendSafely<FieldNoTrades>( count ); return *reinterpret_cast<TradesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendMarginExcess( const Float & value ){ appendSafely<FieldMarginExcess>( value ); }
     void appendTotalNetValue( const Float & value ){ appendSafely<FieldTotalNetValue>( value ); }
     void appendCashOutstanding( const Float & value ){ appendSafely<FieldCashOutstanding>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     MiscFeesBuilder & appendNoMiscFees( unsigned count ) { appendSafely<FieldNoMiscFees>( count ); return *reinterpret_cast<MiscFeesBuilder*>( this ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message CollateralAssignment
class CollateralAssignmentBuilder: protected ReusableMessageBuilder
{
   public:

     static CollateralAssignmentBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CollateralAssignmentBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCollAsgnID( const std::string_view & value ){ appendSafely<FieldCollAsgnID>( value ); }
     void appendCollReqID( const std::string_view & value ){ appendSafely<FieldCollReqID>( value ); }
     void appendCollAsgnReason( const int & value ){ appendSafely<FieldCollAsgnReason>( value ); }
     void appendCollAsgnTransType( const int & value ){ appendSafely<FieldCollAsgnTransType>( value ); }
     void appendCollAsgnRefID( const std::string_view & value ){ appendSafely<FieldCollAsgnRefID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendExpireTime( const std::string_view & value ){ appendSafely<FieldExpireTime>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     TradesBuilder & appendNoTrades( unsigned count ) { appendSafely<FieldNoTrades>( count ); return *reinterpret_cast<TradesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendMarginExcess( const Float & value ){ appendSafely<FieldMarginExcess>( value ); }
     void appendTotalNetValue( const Float & value ){ appendSafely<FieldTotalNetValue>( value ); }
     void appendCashOutstanding( const Float & value ){ appendSafely<FieldCashOutstanding>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     MiscFeesBuilder & appendNoMiscFees( unsigned count ) { appendSafely<FieldNoMiscFees>( count ); return *reinterpret_cast<MiscFeesBuilder*>( this ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendSettlDeliveryType( const int & value ){ appendSafely<FieldSettlDeliveryType>( value ); }
     void appendStandInstDbType( const int & value ){ appendSafely<FieldStandInstDbType>( value ); }
     void appendStandInstDbName( const std::string_view & value ){ appendSafely<FieldStandInstDbName>( value ); }
     void appendStandInstDbID( const std::string_view & value ){ appendSafely<FieldStandInstDbID>( value ); }
     DlvyInstBuilder & appendNoDlvyInst( unsigned count ) { appendSafely<FieldNoDlvyInst>( count ); return *reinterpret_cast<DlvyInstBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message CollateralResponse
class CollateralResponseBuilder: protected ReusableMessageBuilder
{
   public:

     static CollateralResponseBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CollateralResponseBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCollRespID( const std::string_view & value ){ appendSafely<FieldCollRespID>( value ); }
     void appendCollAsgnID( const std::string_view & value ){ appendSafely<FieldCollAsgnID>( value ); }
     void appendCollReqID( const std::string_view & value ){ appendSafely<FieldCollReqID>( value ); }
     void appendCollAsgnReason( const int & value ){ appendSafely<FieldCollAsgnReason>( value ); }
     void appendCollAsgnTransType( const int & value ){ appendSafely<FieldCollAsgnTransType>( value ); }
     void appendCollAsgnRespType( const int & value ){ appendSafely<FieldCollAsgnRespType>( value ); }
     void appendCollAsgnRejectReason( const int & value ){ appendSafely<FieldCollAsgnRejectReason>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     TradesBuilder & appendNoTrades( unsigned count ) { appendSafely<FieldNoTrades>( count ); return *reinterpret_cast<TradesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendMarginExcess( const Float & value ){ appendSafely<FieldMarginExcess>( value ); }
     void appendTotalNetValue( const Float & value ){ appendSafely<FieldTotalNetValue>( value ); }
     void appendCashOutstanding( const Float & value ){ appendSafely<FieldCashOutstanding>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     MiscFeesBuilder & appendNoMiscFees( unsigned count ) { appendSafely<FieldNoMiscFees>( count ); return *reinterpret_cast<MiscFeesBuilder*>( this ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message CollateralReport
class CollateralReportBuilder: protected ReusableMessageBuilder
{
   public:

     static CollateralReportBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CollateralReportBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCollRptID( const std::string_view & value ){ appendSafely<FieldCollRptID>( value ); }
     void appendCollInquiryID( const std::string_view & value ){ appendSafely<FieldCollInquiryID>( value ); }
     void appendCollStatus( const int & value ){ appendSafely<FieldCollStatus>( value ); }
     void appendTotNumReports( const int & value ){ appendSafely<FieldTotNumReports>( value ); }
     void appendLastRptRequested( const bool & value ){ appendSafely<FieldLastRptRequested>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     TradesBuilder & appendNoTrades( unsigned count ) { appendSafely<FieldNoTrades>( count ); return *reinterpret_cast<TradesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendMarginExcess( const Float & value ){ appendSafely<FieldMarginExcess>( value ); }
     void appendTotalNetValue( const Float & value ){ appendSafely<FieldTotalNetValue>( value ); }
     void appendCashOutstanding( const Float & value ){ appendSafely<FieldCashOutstanding>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     MiscFeesBuilder & appendNoMiscFees( unsigned count ) { appendSafely<FieldNoMiscFees>( count ); return *reinterpret_cast<MiscFeesBuilder*>( this ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendSettlDeliveryType( const int & value ){ appendSafely<FieldSettlDeliveryType>( value ); }
     void appendStandInstDbType( const int & value ){ appendSafely<FieldStandInstDbType>( value ); }
     void appendStandInstDbName( const std::string_view & value ){ appendSafely<FieldStandInstDbName>( value ); }
     void appendStandInstDbID( const std::string_view & value ){ appendSafely<FieldStandInstDbID>( value ); }
     DlvyInstBuilder & appendNoDlvyInst( unsigned count ) { appendSafely<FieldNoDlvyInst>( count ); return *reinterpret_cast<DlvyInstBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message CollateralInquiry
class CollateralInquiryBuilder: protected ReusableMessageBuilder
{
   public:

     static CollateralInquiryBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CollateralInquiryBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCollInquiryID( const std::string_view & value ){ appendSafely<FieldCollInquiryID>( value ); }
     CollInquiryQualifierBuilder & appendNoCollInquiryQualifier( unsigned count ) { appendSafely<FieldNoCollInquiryQualifier>( count ); return *reinterpret_cast<CollInquiryQualifierBuilder*>( this ); }
     void appendSubscriptionRequestType( const char & value ){ appendSafely<FieldSubscriptionRequestType>( value ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     TradesBuilder & appendNoTrades( unsigned count ) { appendSafely<FieldNoTrades>( count ); return *reinterpret_cast<TradesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendMarginExcess( const Float & value ){ appendSafely<FieldMarginExcess>( value ); }
     void appendTotalNetValue( const Float & value ){ appendSafely<FieldTotalNetValue>( value ); }
     void appendCashOutstanding( const Float & value ){ appendSafely<FieldCashOutstanding>( value ); }
     TrdRegTimestampsBuilder & appendNoTrdRegTimestamps( unsigned count ) { appendSafely<FieldNoTrdRegTimestamps>( count ); return *reinterpret_cast<TrdRegTimestampsBuilder*>( this ); }
     void appendSide( const char & value ){ appendSafely<FieldSide>( value ); }
     void appendPrice( const Float & value ){ appendSafely<FieldPrice>( value ); }
     void appendPriceType( const int & value ){ appendSafely<FieldPriceType>( value ); }
     void appendAccruedInterestAmt( const Float & value ){ appendSafely<FieldAccruedInterestAmt>( value ); }
     void appendEndAccruedInterestAmt( const Float & value ){ appendSafely<FieldEndAccruedInterestAmt>( value ); }
     void appendStartCash( const Float & value ){ appendSafely<FieldStartCash>( value ); }
     void appendEndCash( const Float & value ){ appendSafely<FieldEndCash>( value ); }
     void appendSpread( const Float & value ){ appendSafely<FieldSpread>( value ); }
     void appendBenchmarkCurveCurrency( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveCurrency>( value ); }
     void appendBenchmarkCurveName( const std::string_view & value ){ appendSafely<FieldBenchmarkCurveName>( value ); }
     void appendBenchmarkCurvePoint( const std::string_view & value ){ appendSafely<FieldBenchmarkCurvePoint>( value ); }
     void appendBenchmarkPrice( const Float & value ){ appendSafely<FieldBenchmarkPrice>( value ); }
     void appendBenchmarkPriceType( const int & value ){ appendSafely<FieldBenchmarkPriceType>( value ); }
     void appendBenchmarkSecurityID( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityID>( value ); }
     void appendBenchmarkSecurityIDSource( const std::string_view & value ){ appendSafely<FieldBenchmarkSecurityIDSource>( value ); }
     StipulationsBuilder & appendNoStipulations( unsigned count ) { appendSafely<FieldNoStipulations>( count ); return *reinterpret_cast<StipulationsBuilder*>( this ); }
     void appendSettlDeliveryType( const int & value ){ appendSafely<FieldSettlDeliveryType>( value ); }
     void appendStandInstDbType( const int & value ){ appendSafely<FieldStandInstDbType>( value ); }
     void appendStandInstDbName( const std::string_view & value ){ appendSafely<FieldStandInstDbName>( value ); }
     void appendStandInstDbID( const std::string_view & value ){ appendSafely<FieldStandInstDbID>( value ); }
     DlvyInstBuilder & appendNoDlvyInst( unsigned count ) { appendSafely<FieldNoDlvyInst>( count ); return *reinterpret_cast<DlvyInstBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message NetworkCounterpartySystemStatusRequest
class NetworkCounterpartySystemStatusRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static NetworkCounterpartySystemStatusRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NetworkCounterpartySystemStatusRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendNetworkRequestType( const int & value ){ appendSafely<FieldNetworkRequestType>( value ); }
     void appendNetworkRequestID( const std::string_view & value ){ appendSafely<FieldNetworkRequestID>( value ); }
     CompIDsBuilder & appendNoCompIDs( unsigned count ) { appendSafely<FieldNoCompIDs>( count ); return *reinterpret_cast<CompIDsBuilder*>( this ); }
};


// Message NetworkCounterpartySystemStatusResponse
class NetworkCounterpartySystemStatusResponseBuilder: protected ReusableMessageBuilder
{
   public:

     static NetworkCounterpartySystemStatusResponseBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<NetworkCounterpartySystemStatusResponseBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendNetworkStatusResponseType( const int & value ){ appendSafely<FieldNetworkStatusResponseType>( value ); }
     void appendNetworkRequestID( const std::string_view & value ){ appendSafely<FieldNetworkRequestID>( value ); }
     void appendNetworkResponseID( const std::string_view & value ){ appendSafely<FieldNetworkResponseID>( value ); }
     void appendLastNetworkResponseID( const std::string_view & value ){ appendSafely<FieldLastNetworkResponseID>( value ); }
     CompIDsBuilder & appendNoCompIDs( unsigned count ) { appendSafely<FieldNoCompIDs>( count ); return *reinterpret_cast<CompIDsBuilder*>( this ); }
};


// Message UserRequest
class UserRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static UserRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<UserRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendUserRequestID( const std::string_view & value ){ appendSafely<FieldUserRequestID>( value ); }
     void appendUserRequestType( const int & value ){ appendSafely<FieldUserRequestType>( value ); }
     void appendUsername( const std::string_view & value ){ appendSafely<FieldUsername>( value ); }
     void appendPassword( const std::string_view & value ){ appendSafely<FieldPassword>( value ); }
     void appendNewPassword( const std::string_view & value ){ appendSafely<FieldNewPassword>( value ); }
     void appendRawDataLength( const unsigned & value ){ appendSafely<FieldRawDataLength>( value ); }
     void appendRawData( const std::string_view & value ){ appendSafely<FieldRawData>( value ); }
};


// Message UserResponse
class UserResponseBuilder: protected ReusableMessageBuilder
{
   public:

     static UserResponseBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<UserResponseBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendUserRequestID( const std::string_view & value ){ appendSafely<FieldUserRequestID>( value ); }
     void appendUsername( const std::string_view & value ){ appendSafely<FieldUsername>( value ); }
     void appendUserStatus( const int & value ){ appendSafely<FieldUserStatus>( value ); }
     void appendUserStatusText( const std::string_view & value ){ appendSafely<FieldUserStatusText>( value ); }
};


// Message CollateralInquiryAck
class CollateralInquiryAckBuilder: protected ReusableMessageBuilder
{
   public:

     static CollateralInquiryAckBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<CollateralInquiryAckBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendCollInquiryID( const std::string_view & value ){ appendSafely<FieldCollInquiryID>( value ); }
     void appendCollInquiryStatus( const int & value ){ appendSafely<FieldCollInquiryStatus>( value ); }
     void appendCollInquiryResult( const int & value ){ appendSafely<FieldCollInquiryResult>( value ); }
     CollInquiryQualifierBuilder & appendNoCollInquiryQualifier( unsigned count ) { appendSafely<FieldNoCollInquiryQualifier>( count ); return *reinterpret_cast<CollInquiryQualifierBuilder*>( this ); }
     void appendTotNumReports( const int & value ){ appendSafely<FieldTotNumReports>( value ); }
     PartyIDsBuilder & appendNoPartyIDs( unsigned count ) { appendSafely<FieldNoPartyIDs>( count ); return *reinterpret_cast<PartyIDsBuilder*>( this ); }
     void appendAccount( const std::string_view & value ){ appendSafely<FieldAccount>( value ); }
     void appendAccountType( const int & value ){ appendSafely<FieldAccountType>( value ); }
     void appendClOrdID( const std::string_view & value ){ appendSafely<FieldClOrdID>( value ); }
     void appendOrderID( const std::string_view & value ){ appendSafely<FieldOrderID>( value ); }
     void appendSecondaryOrderID( const std::string_view & value ){ appendSafely<FieldSecondaryOrderID>( value ); }
     void appendSecondaryClOrdID( const std::string_view & value ){ appendSafely<FieldSecondaryClOrdID>( value ); }
     ExecsBuilder & appendNoExecs( unsigned count ) { appendSafely<FieldNoExecs>( count ); return *reinterpret_cast<ExecsBuilder*>( this ); }
     TradesBuilder & appendNoTrades( unsigned count ) { appendSafely<FieldNoTrades>( count ); return *reinterpret_cast<TradesBuilder*>( this ); }
     void appendSymbol( const std::string_view & value ){ appendSafely<FieldSymbol>( value ); }
     void appendSymbolSfx( const std::string_view & value ){ appendSafely<FieldSymbolSfx>( value ); }
     void appendSecurityID( const std::string_view & value ){ appendSafely<FieldSecurityID>( value ); }
     void appendSecurityIDSource( const std::string_view & value ){ appendSafely<FieldSecurityIDSource>( value ); }
     SecurityAltIDBuilder & appendNoSecurityAltID( unsigned count ) { appendSafely<FieldNoSecurityAltID>( count ); return *reinterpret_cast<SecurityAltIDBuilder*>( this ); }
     void appendProduct( const int & value ){ appendSafely<FieldProduct>( value ); }
     void appendCFICode( const std::string_view & value ){ appendSafely<FieldCFICode>( value ); }
     void appendSecurityType( const std::string_view & value ){ appendSafely<FieldSecurityType>( value ); }
     void appendSecuritySubType( const std::string_view & value ){ appendSafely<FieldSecuritySubType>( value ); }
     void appendMaturityMonthYear( const std::string_view & value ){ appendSafely<FieldMaturityMonthYear>( value ); }
     void appendMaturityDate( const std::string_view & value ){ appendSafely<FieldMaturityDate>( value ); }
     void appendPutOrCall( const int & value ){ appendSafely<FieldPutOrCall>( value ); }
     void appendCouponPaymentDate( const std::string_view & value ){ appendSafely<FieldCouponPaymentDate>( value ); }
     void appendIssueDate( const std::string_view & value ){ appendSafely<FieldIssueDate>( value ); }
     void appendRepoCollateralSecurityType( const std::string_view & value ){ appendSafely<FieldRepoCollateralSecurityType>( value ); }
     void appendRepurchaseTerm( const int & value ){ appendSafely<FieldRepurchaseTerm>( value ); }
     void appendRepurchaseRate( const Float & value ){ appendSafely<FieldRepurchaseRate>( value ); }
     void appendFactor( const Float & value ){ appendSafely<FieldFactor>( value ); }
     void appendCreditRating( const std::string_view & value ){ appendSafely<FieldCreditRating>( value ); }
     void appendInstrRegistry( const std::string_view & value ){ appendSafely<FieldInstrRegistry>( value ); }
     void appendCountryOfIssue( const std::string_view & value ){ appendSafely<FieldCountryOfIssue>( value ); }
     void appendStateOrProvinceOfIssue( const std::string_view & value ){ appendSafely<FieldStateOrProvinceOfIssue>( value ); }
     void appendLocaleOfIssue( const std::string_view & value ){ appendSafely<FieldLocaleOfIssue>( value ); }
     void appendRedemptionDate( const std::string_view & value ){ appendSafely<FieldRedemptionDate>( value ); }
     void appendStrikePrice( const Float & value ){ appendSafely<FieldStrikePrice>( value ); }
     void appendStrikeCurrency( const std::string_view & value ){ appendSafely<FieldStrikeCurrency>( value ); }
     void appendOptAttribute( const char & value ){ appendSafely<FieldOptAttribute>( value ); }
     void appendContractMultiplier( const Float & value ){ appendSafely<FieldContractMultiplier>( value ); }
     void appendCouponRate( const Float & value ){ appendSafely<FieldCouponRate>( value ); }
     void appendSecurityExchange( const std::string_view & value ){ appendSafely<FieldSecurityExchange>( value ); }
     void appendIssuer( const std::string_view & value ){ appendSafely<FieldIssuer>( value ); }
     void appendEncodedIssuerLen( const unsigned & value ){ appendSafely<FieldEncodedIssuerLen>( value ); }
     void appendEncodedIssuer( const std::string_view & value ){ appendSafely<FieldEncodedIssuer>( value ); }
     void appendSecurityDesc( const std::string_view & value ){ appendSafely<FieldSecurityDesc>( value ); }
     void appendEncodedSecurityDescLen( const unsigned & value ){ appendSafely<FieldEncodedSecurityDescLen>( value ); }
     void appendEncodedSecurityDesc( const std::string_view & value ){ appendSafely<FieldEncodedSecurityDesc>( value ); }
     void appendPool( const std::string_view & value ){ appendSafely<FieldPool>( value ); }
     void appendContractSettlMonth( const std::string_view & value ){ appendSafely<FieldContractSettlMonth>( value ); }
     void appendCPProgram( const int & value ){ appendSafely<FieldCPProgram>( value ); }
     void appendCPRegType( const std::string_view & value ){ appendSafely<FieldCPRegType>( value ); }
     EventsBuilder & appendNoEvents( unsigned count ) { appendSafely<FieldNoEvents>( count ); return *reinterpret_cast<EventsBuilder*>( this ); }
     void appendDatedDate( const std::string_view & value ){ appendSafely<FieldDatedDate>( value ); }
     void appendInterestAccrualDate( const std::string_view & value ){ appendSafely<FieldInterestAccrualDate>( value ); }
     void appendAgreementDesc( const std::string_view & value ){ appendSafely<FieldAgreementDesc>( value ); }
     void appendAgreementID( const std::string_view & value ){ appendSafely<FieldAgreementID>( value ); }
     void appendAgreementDate( const std::string_view & value ){ appendSafely<FieldAgreementDate>( value ); }
     void appendAgreementCurrency( const std::string_view & value ){ appendSafely<FieldAgreementCurrency>( value ); }
     void appendTerminationType( const int & value ){ appendSafely<FieldTerminationType>( value ); }
     void appendStartDate( const std::string_view & value ){ appendSafely<FieldStartDate>( value ); }
     void appendEndDate( const std::string_view & value ){ appendSafely<FieldEndDate>( value ); }
     void appendDeliveryType( const int & value ){ appendSafely<FieldDeliveryType>( value ); }
     void appendMarginRatio( const Float & value ){ appendSafely<FieldMarginRatio>( value ); }
     void appendSettlDate( const std::string_view & value ){ appendSafely<FieldSettlDate>( value ); }
     void appendQuantity( const Float & value ){ appendSafely<FieldQuantity>( value ); }
     void appendQtyType( const int & value ){ appendSafely<FieldQtyType>( value ); }
     void appendCurrency( const std::string_view & value ){ appendSafely<FieldCurrency>( value ); }
     LegsBuilder & appendNoLegs( unsigned count ) { appendSafely<FieldNoLegs>( count ); return *reinterpret_cast<LegsBuilder*>( this ); }
     UnderlyingsBuilder & appendNoUnderlyings( unsigned count ) { appendSafely<FieldNoUnderlyings>( count ); return *reinterpret_cast<UnderlyingsBuilder*>( this ); }
     void appendTradingSessionID( const std::string_view & value ){ appendSafely<FieldTradingSessionID>( value ); }
     void appendTradingSessionSubID( const std::string_view & value ){ appendSafely<FieldTradingSessionSubID>( value ); }
     void appendSettlSessID( const std::string_view & value ){ appendSafely<FieldSettlSessID>( value ); }
     void appendSettlSessSubID( const std::string_view & value ){ appendSafely<FieldSettlSessSubID>( value ); }
     void appendClearingBusinessDate( const std::string_view & value ){ appendSafely<FieldClearingBusinessDate>( value ); }
     void appendResponseTransportType( const int & value ){ appendSafely<FieldResponseTransportType>( value ); }
     void appendResponseDestination( const std::string_view & value ){ appendSafely<FieldResponseDestination>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};


// Message ConfirmationRequest
class ConfirmationRequestBuilder: protected ReusableMessageBuilder
{
   public:

     static ConfirmationRequestBuilder & coat( ReusableMessageBuilder & builder ){ return reinterpret_cast<ConfirmationRequestBuilder&>( builder ); }
     HeaderBuilder & getHeader(){ return reinterpret_cast<HeaderBuilder&>( header ); }
     ReusableMessageBuilder & super(){ return *this; }
     void appendConfirmReqID( const std::string_view & value ){ appendSafely<FieldConfirmReqID>( value ); }
     void appendConfirmType( const int & value ){ appendSafely<FieldConfirmType>( value ); }
     OrdersBuilder & appendNoOrders( unsigned count ) { appendSafely<FieldNoOrders>( count ); return *reinterpret_cast<OrdersBuilder*>( this ); }
     void appendAllocID( const std::string_view & value ){ appendSafely<FieldAllocID>( value ); }
     void appendSecondaryAllocID( const std::string_view & value ){ appendSafely<FieldSecondaryAllocID>( value ); }
     void appendIndividualAllocID( const std::string_view & value ){ appendSafely<FieldIndividualAllocID>( value ); }
     void appendTransactTime( const std::string_view & value ){ appendSafely<FieldTransactTime>( value ); }
     void appendAllocAccount( const std::string_view & value ){ appendSafely<FieldAllocAccount>( value ); }
     void appendAllocAcctIDSource( const int & value ){ appendSafely<FieldAllocAcctIDSource>( value ); }
     void appendAllocAccountType( const int & value ){ appendSafely<FieldAllocAccountType>( value ); }
     void appendText( const std::string_view & value ){ appendSafely<FieldText>( value ); }
     void appendEncodedTextLen( const unsigned & value ){ appendSafely<FieldEncodedTextLen>( value ); }
     void appendEncodedText( const std::string_view & value ){ appendSafely<FieldEncodedText>( value ); }
};
// end of MessageBuilders.hxx

} // namespace fix44

#endif /* fix44_MESSAGE_BUILDERS_H */

